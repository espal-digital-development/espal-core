// Code generated by espal-store-synthesizer. DO NOT EDIT.
package personalmessage

import (
	"time"

	"github.com/espal-digital-development/espal-core/database"
)

var _ PersonalMessageEntity = &PersonalMessage{}

type PersonalMessageEntity interface {
	database.Model
	UserID() string
	SetUserID(userID string)
	RecipientID() string
	SetRecipientID(recipientID string)
	ResponseToID() *string
	SetResponseToID(responseToID *string)
	Title() *string
	SetTitle(title *string)
	Message() string
	SetMessage(message string)
}

// TableName returns the table name that belongs to the current model.
func (personalMessage *PersonalMessage) TableName() string {
	return "PersonalMessage"
}

// ID returns id.
func (personalMessage *PersonalMessage) ID() string {
	return personalMessage.id
}

// CreatedByID returns createdByID.
func (personalMessage *PersonalMessage) CreatedByID() string {
	return personalMessage.createdByID
}

// SetCreatedByID sets the createdByID.
func (personalMessage *PersonalMessage) SetCreatedByID(createdByID string) {
	personalMessage.createdByID = createdByID
}

// UpdatedByID returns updatedByID.
func (personalMessage *PersonalMessage) UpdatedByID() *string {
	return personalMessage.updatedByID
}

// SetUpdatedByID sets the updatedByID.
func (personalMessage *PersonalMessage) SetUpdatedByID(updatedByID *string) {
	personalMessage.updatedByID = updatedByID
}

// CreatedAt returns createdAt.
func (personalMessage *PersonalMessage) CreatedAt() time.Time {
	return personalMessage.createdAt
}

// SetCreatedAt sets the createdAt.
func (personalMessage *PersonalMessage) SetCreatedAt(createdAt time.Time) {
	personalMessage.createdAt = createdAt
}

// UpdatedAt returns updatedAt.
func (personalMessage *PersonalMessage) UpdatedAt() *time.Time {
	return personalMessage.updatedAt
}

// SetUpdatedAt sets the updatedAt.
func (personalMessage *PersonalMessage) SetUpdatedAt(updatedAt *time.Time) {
	personalMessage.updatedAt = updatedAt
}

// CreatedByFirstName returns createdByFirstName.
func (personalMessage *PersonalMessage) CreatedByFirstName() *string {
	return personalMessage.createdByFirstName
}

// SetCreatedByFirstName sets the createdByFirstName.
func (personalMessage *PersonalMessage) SetCreatedByFirstName(createdByFirstName *string) {
	personalMessage.createdByFirstName = createdByFirstName
}

// CreatedBySurname returns createdBySurname.
func (personalMessage *PersonalMessage) CreatedBySurname() *string {
	return personalMessage.createdBySurname
}

// SetCreatedBySurname sets the createdBySurname.
func (personalMessage *PersonalMessage) SetCreatedBySurname(createdBySurname *string) {
	personalMessage.createdBySurname = createdBySurname
}

// UpdatedByFirstName returns updatedByFirstName.
func (personalMessage *PersonalMessage) UpdatedByFirstName() *string {
	return personalMessage.updatedByFirstName
}

// SetUpdatedByFirstName sets the updatedByFirstName.
func (personalMessage *PersonalMessage) SetUpdatedByFirstName(updatedByFirstName *string) {
	personalMessage.updatedByFirstName = updatedByFirstName
}

// UpdatedBySurname returns updatedBySurname.
func (personalMessage *PersonalMessage) UpdatedBySurname() *string {
	return personalMessage.updatedBySurname
}

// SetUpdatedBySurname sets the updatedBySurname.
func (personalMessage *PersonalMessage) SetUpdatedBySurname(updatedBySurname *string) {
	personalMessage.updatedBySurname = updatedBySurname
}

// IsUpdated returns true if UpdatedByID is set.
func (personalMessage *PersonalMessage) IsUpdated() bool {
	return personalMessage.updatedByID != nil
}

// UserID returns userID.
func (personalMessage *PersonalMessage) UserID() string {
	return personalMessage.userID
}

// SetUserID sets the userID.
func (personalMessage *PersonalMessage) SetUserID(userID string) {
	personalMessage.userID = userID
}

// RecipientID returns recipientID.
func (personalMessage *PersonalMessage) RecipientID() string {
	return personalMessage.recipientID
}

// SetRecipientID sets the recipientID.
func (personalMessage *PersonalMessage) SetRecipientID(recipientID string) {
	personalMessage.recipientID = recipientID
}

// ResponseToID returns responseToID.
func (personalMessage *PersonalMessage) ResponseToID() *string {
	return personalMessage.responseToID
}

// SetResponseToID sets the responseToID.
func (personalMessage *PersonalMessage) SetResponseToID(responseToID *string) {
	personalMessage.responseToID = responseToID
}

// Title returns title.
func (personalMessage *PersonalMessage) Title() *string {
	return personalMessage.title
}

// SetTitle sets the title.
func (personalMessage *PersonalMessage) SetTitle(title *string) {
	personalMessage.title = title
}

// Message returns message.
func (personalMessage *PersonalMessage) Message() string {
	return personalMessage.message
}

// SetMessage sets the message.
func (personalMessage *PersonalMessage) SetMessage(message string) {
	personalMessage.message = message
}

func newPersonalMessage() *PersonalMessage {
	return &PersonalMessage{}
}

// New returns a new instance of PersonalMessageEntity.
func NewPersonalMessageEntity() PersonalMessageEntity {
	return newPersonalMessage()
}
