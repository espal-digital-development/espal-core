// Code generated by espal-store-synthesizer. DO NOT EDIT.
package newsarticle

import (
	"time"

	"github.com/espal-digital-development/espal-core/database"
)

var _ LikeEntity = &Like{}

type LikeEntity interface {
	database.Model
	NewsArticleID() string
	SetNewsArticleID(newsArticleID string)
}

// ID returns id.
func (like *Like) ID() string {
	return like.id
}

// CreatedByID returns createdByID.
func (like *Like) CreatedByID() string {
	return like.createdByID
}

// SetCreatedByID sets the createdByID.
func (like *Like) SetCreatedByID(createdByID string) {
	like.createdByID = createdByID
}

// UpdatedByID returns updatedByID.
func (like *Like) UpdatedByID() *string {
	return like.updatedByID
}

// SetUpdatedByID sets the updatedByID.
func (like *Like) SetUpdatedByID(updatedByID *string) {
	like.updatedByID = updatedByID
}

// CreatedAt returns createdAt.
func (like *Like) CreatedAt() time.Time {
	return like.createdAt
}

// SetCreatedAt sets the createdAt.
func (like *Like) SetCreatedAt(createdAt time.Time) {
	like.createdAt = createdAt
}

// UpdatedAt returns updatedAt.
func (like *Like) UpdatedAt() *time.Time {
	return like.updatedAt
}

// SetUpdatedAt sets the updatedAt.
func (like *Like) SetUpdatedAt(updatedAt *time.Time) {
	like.updatedAt = updatedAt
}

// CreatedByFirstName returns createdByFirstName.
func (like *Like) CreatedByFirstName() *string {
	return like.createdByFirstName
}

// SetCreatedByFirstName sets the createdByFirstName.
func (like *Like) SetCreatedByFirstName(createdByFirstName *string) {
	like.createdByFirstName = createdByFirstName
}

// CreatedBySurname returns createdBySurname.
func (like *Like) CreatedBySurname() *string {
	return like.createdBySurname
}

// SetCreatedBySurname sets the createdBySurname.
func (like *Like) SetCreatedBySurname(createdBySurname *string) {
	like.createdBySurname = createdBySurname
}

// UpdatedByFirstName returns updatedByFirstName.
func (like *Like) UpdatedByFirstName() *string {
	return like.updatedByFirstName
}

// SetUpdatedByFirstName sets the updatedByFirstName.
func (like *Like) SetUpdatedByFirstName(updatedByFirstName *string) {
	like.updatedByFirstName = updatedByFirstName
}

// UpdatedBySurname returns updatedBySurname.
func (like *Like) UpdatedBySurname() *string {
	return like.updatedBySurname
}

// SetUpdatedBySurname sets the updatedBySurname.
func (like *Like) SetUpdatedBySurname(updatedBySurname *string) {
	like.updatedBySurname = updatedBySurname
}

// IsUpdated returns true if UpdatedByID is set.
func (like *Like) IsUpdated() bool {
	return like.updatedByID != nil
}

// NewsArticleID returns newsArticleID.
func (like *Like) NewsArticleID() string {
	return like.newsArticleID
}

// SetNewsArticleID sets the newsArticleID.
func (like *Like) SetNewsArticleID(newsArticleID string) {
	like.newsArticleID = newsArticleID
}

func newLike() *Like {
	return &Like{}
}

// New returns a new instance of LikeEntity.
func NewLikeEntity() LikeEntity {
	return newLike()
}
