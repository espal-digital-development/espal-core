// Code generated by espal-store-synthesizer. DO NOT EDIT.
package cart

import (
	"time"

	"github.com/espal-digital-development/espal-core/database"
)

var _ CartEntity = &Cart{}

type CartEntity interface {
	database.Model
	DomainID() string
	SetDomainID(domainID string)
	UserID() *string
	SetUserID(userID *string)
}

// TableName returns the table name that belongs to the current model.
func (c *Cart) TableName() string {
	return "Cart"
}

// ID returns id.
func (c *Cart) ID() string {
	return c.id
}

// CreatedByID returns createdByID.
func (c *Cart) CreatedByID() string {
	return c.createdByID
}

// SetCreatedByID sets the createdByID.
func (c *Cart) SetCreatedByID(createdByID string) {
	c.createdByID = createdByID
}

// UpdatedByID returns updatedByID.
func (c *Cart) UpdatedByID() *string {
	return c.updatedByID
}

// SetUpdatedByID sets the updatedByID.
func (c *Cart) SetUpdatedByID(updatedByID *string) {
	c.updatedByID = updatedByID
}

// CreatedAt returns createdAt.
func (c *Cart) CreatedAt() time.Time {
	return c.createdAt
}

// SetCreatedAt sets the createdAt.
func (c *Cart) SetCreatedAt(createdAt time.Time) {
	c.createdAt = createdAt
}

// UpdatedAt returns updatedAt.
func (c *Cart) UpdatedAt() *time.Time {
	return c.updatedAt
}

// SetUpdatedAt sets the updatedAt.
func (c *Cart) SetUpdatedAt(updatedAt *time.Time) {
	c.updatedAt = updatedAt
}

// CreatedByFirstName returns createdByFirstName.
func (c *Cart) CreatedByFirstName() *string {
	return c.createdByFirstName
}

// SetCreatedByFirstName sets the createdByFirstName.
func (c *Cart) SetCreatedByFirstName(createdByFirstName *string) {
	c.createdByFirstName = createdByFirstName
}

// CreatedBySurname returns createdBySurname.
func (c *Cart) CreatedBySurname() *string {
	return c.createdBySurname
}

// SetCreatedBySurname sets the createdBySurname.
func (c *Cart) SetCreatedBySurname(createdBySurname *string) {
	c.createdBySurname = createdBySurname
}

// UpdatedByFirstName returns updatedByFirstName.
func (c *Cart) UpdatedByFirstName() *string {
	return c.updatedByFirstName
}

// SetUpdatedByFirstName sets the updatedByFirstName.
func (c *Cart) SetUpdatedByFirstName(updatedByFirstName *string) {
	c.updatedByFirstName = updatedByFirstName
}

// UpdatedBySurname returns updatedBySurname.
func (c *Cart) UpdatedBySurname() *string {
	return c.updatedBySurname
}

// SetUpdatedBySurname sets the updatedBySurname.
func (c *Cart) SetUpdatedBySurname(updatedBySurname *string) {
	c.updatedBySurname = updatedBySurname
}

// IsUpdated returns true if UpdatedByID is set.
func (c *Cart) IsUpdated() bool {
	return c.updatedByID != nil
}

// DomainID returns domainID.
func (c *Cart) DomainID() string {
	return c.domainID
}

// SetDomainID sets the domainID.
func (c *Cart) SetDomainID(domainID string) {
	c.domainID = domainID
}

// UserID returns userID.
func (c *Cart) UserID() *string {
	return c.userID
}

// SetUserID sets the userID.
func (c *Cart) SetUserID(userID *string) {
	c.userID = userID
}

func newCart() *Cart {
	return &Cart{}
}

// New returns a new instance of CartEntity.
func NewCartEntity() CartEntity {
	return newCart()
}
