// Code generated by espal-store-synthesizer. DO NOT EDIT.
package cart_test

import (
	"testing"
	"time"

	"github.com/espal-digital-development/espal-core/stores/cart"
)

func TestCartTable(t *testing.T) {
	cart := cart.NewCartEntity()
	if cart.TableName() == "" {
		t.Fatal("TableName shouldn't be empty")
	}
}

func TestCartTableAlias(t *testing.T) {
	cart := cart.NewCartEntity()
	if cart.TableName() == "" {
		t.Fatal("TableAlias shouldn't be empty")
	}
}

func TestCartIsUpdated(t *testing.T) {
	cart := cart.NewCartEntity()
	cart.IsUpdated()
}

func TestCartID(t *testing.T) {
	cart := cart.NewCartEntity()
	cart.ID()
}

func TestCartCreatedByID(t *testing.T) {
	cart := cart.NewCartEntity()
	testValue := "testValue"
	cart.SetCreatedByID(testValue)
	if testValue != cart.CreatedByID() {
		t.Fatal("Getter did not return the Set value")
	}
}

func TestCartUpdatedByID(t *testing.T) {
	cart := cart.NewCartEntity()
	testValue := "testValue"
	cart.SetUpdatedByID(&testValue)
	if &testValue != cart.UpdatedByID() {
		t.Fatal("Getter did not return the Set value")
	}
}

func TestCartCreatedAt(t *testing.T) {
	cart := cart.NewCartEntity()
	testValue := time.Now()
	cart.SetCreatedAt(testValue)
	if testValue != cart.CreatedAt() {
		t.Fatal("Getter did not return the Set value")
	}
}

func TestCartUpdatedAt(t *testing.T) {
	cart := cart.NewCartEntity()
	testValue := time.Now()
	cart.SetUpdatedAt(&testValue)
	if &testValue != cart.UpdatedAt() {
		t.Fatal("Getter did not return the Set value")
	}
}

func TestCartCreatedByFirstName(t *testing.T) {
	cart := cart.NewCartEntity()
	testValue := "testValue"
	cart.SetCreatedByFirstName(&testValue)
	if &testValue != cart.CreatedByFirstName() {
		t.Fatal("Getter did not return the Set value")
	}
}

func TestCartCreatedBySurname(t *testing.T) {
	cart := cart.NewCartEntity()
	testValue := "testValue"
	cart.SetCreatedBySurname(&testValue)
	if &testValue != cart.CreatedBySurname() {
		t.Fatal("Getter did not return the Set value")
	}
}

func TestCartUpdatedByFirstName(t *testing.T) {
	cart := cart.NewCartEntity()
	testValue := "testValue"
	cart.SetUpdatedByFirstName(&testValue)
	if &testValue != cart.UpdatedByFirstName() {
		t.Fatal("Getter did not return the Set value")
	}
}

func TestCartUpdatedBySurname(t *testing.T) {
	cart := cart.NewCartEntity()
	testValue := "testValue"
	cart.SetUpdatedBySurname(&testValue)
	if &testValue != cart.UpdatedBySurname() {
		t.Fatal("Getter did not return the Set value")
	}
}

func TestCartDomainID(t *testing.T) {
	cart := cart.NewCartEntity()
	testValue := "testValue"
	cart.SetDomainID(testValue)
	if testValue != cart.DomainID() {
		t.Fatal("Getter did not return the Set value")
	}
}

func TestCartUserID(t *testing.T) {
	cart := cart.NewCartEntity()
	testValue := "testValue"
	cart.SetUserID(&testValue)
	if &testValue != cart.UserID() {
		t.Fatal("Getter did not return the Set value")
	}
}
