// Code generated by espal-store-synthesizer. DO NOT EDIT.
package tax

import (
	"time"

	"github.com/espal-digital-development/espal-core/database"
)

var _ TaxEntity = &Tax{}

type TaxEntity interface {
	database.Model
	TaxGroupID() string
	SetTaxGroupID(taxGroupID string)
	Country() uint16
	SetCountry(country uint16)
	Rate() float32
	SetRate(rate float32)
}

// TableName returns the table name that belongs to the current model.
func (tax *Tax) TableName() string {
	return "Tax"
}

// ID returns id.
func (tax *Tax) ID() string {
	return tax.id
}

// CreatedByID returns createdByID.
func (tax *Tax) CreatedByID() string {
	return tax.createdByID
}

// SetCreatedByID sets the createdByID.
func (tax *Tax) SetCreatedByID(createdByID string) {
	tax.createdByID = createdByID
}

// UpdatedByID returns updatedByID.
func (tax *Tax) UpdatedByID() *string {
	return tax.updatedByID
}

// SetUpdatedByID sets the updatedByID.
func (tax *Tax) SetUpdatedByID(updatedByID *string) {
	tax.updatedByID = updatedByID
}

// CreatedAt returns createdAt.
func (tax *Tax) CreatedAt() time.Time {
	return tax.createdAt
}

// SetCreatedAt sets the createdAt.
func (tax *Tax) SetCreatedAt(createdAt time.Time) {
	tax.createdAt = createdAt
}

// UpdatedAt returns updatedAt.
func (tax *Tax) UpdatedAt() *time.Time {
	return tax.updatedAt
}

// SetUpdatedAt sets the updatedAt.
func (tax *Tax) SetUpdatedAt(updatedAt *time.Time) {
	tax.updatedAt = updatedAt
}

// CreatedByFirstName returns createdByFirstName.
func (tax *Tax) CreatedByFirstName() *string {
	return tax.createdByFirstName
}

// SetCreatedByFirstName sets the createdByFirstName.
func (tax *Tax) SetCreatedByFirstName(createdByFirstName *string) {
	tax.createdByFirstName = createdByFirstName
}

// CreatedBySurname returns createdBySurname.
func (tax *Tax) CreatedBySurname() *string {
	return tax.createdBySurname
}

// SetCreatedBySurname sets the createdBySurname.
func (tax *Tax) SetCreatedBySurname(createdBySurname *string) {
	tax.createdBySurname = createdBySurname
}

// UpdatedByFirstName returns updatedByFirstName.
func (tax *Tax) UpdatedByFirstName() *string {
	return tax.updatedByFirstName
}

// SetUpdatedByFirstName sets the updatedByFirstName.
func (tax *Tax) SetUpdatedByFirstName(updatedByFirstName *string) {
	tax.updatedByFirstName = updatedByFirstName
}

// UpdatedBySurname returns updatedBySurname.
func (tax *Tax) UpdatedBySurname() *string {
	return tax.updatedBySurname
}

// SetUpdatedBySurname sets the updatedBySurname.
func (tax *Tax) SetUpdatedBySurname(updatedBySurname *string) {
	tax.updatedBySurname = updatedBySurname
}

// IsUpdated returns true if UpdatedByID is set.
func (tax *Tax) IsUpdated() bool {
	return tax.updatedByID != nil
}

// TaxGroupID returns taxGroupID.
func (tax *Tax) TaxGroupID() string {
	return tax.taxGroupID
}

// SetTaxGroupID sets the taxGroupID.
func (tax *Tax) SetTaxGroupID(taxGroupID string) {
	tax.taxGroupID = taxGroupID
}

// Country returns country.
func (tax *Tax) Country() uint16 {
	return tax.country
}

// SetCountry sets the country.
func (tax *Tax) SetCountry(country uint16) {
	tax.country = country
}

// Rate returns rate.
func (tax *Tax) Rate() float32 {
	return tax.rate
}

// SetRate sets the rate.
func (tax *Tax) SetRate(rate float32) {
	tax.rate = rate
}

func newTax() *Tax {
	return &Tax{}
}

// New returns a new instance of TaxEntity.
func NewTaxEntity() TaxEntity {
	return newTax()
}
