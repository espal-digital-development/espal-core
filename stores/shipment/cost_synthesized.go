// Code generated by espal-store-synthesizer. DO NOT EDIT.
package shipment

import (
	"time"

	"github.com/espal-digital-development/espal-core/database"
)

var _ CostEntity = &Cost{}

type CostEntity interface {
	database.Model
}

// ID returns id.
func (c *Cost) ID() string {
	return c.id
}

// CreatedByID returns createdByID.
func (c *Cost) CreatedByID() string {
	return c.createdByID
}

// SetCreatedByID sets the createdByID.
func (c *Cost) SetCreatedByID(createdByID string) {
	c.createdByID = createdByID
}

// UpdatedByID returns updatedByID.
func (c *Cost) UpdatedByID() *string {
	return c.updatedByID
}

// SetUpdatedByID sets the updatedByID.
func (c *Cost) SetUpdatedByID(updatedByID *string) {
	c.updatedByID = updatedByID
}

// CreatedAt returns createdAt.
func (c *Cost) CreatedAt() time.Time {
	return c.createdAt
}

// SetCreatedAt sets the createdAt.
func (c *Cost) SetCreatedAt(createdAt time.Time) {
	c.createdAt = createdAt
}

// UpdatedAt returns updatedAt.
func (c *Cost) UpdatedAt() *time.Time {
	return c.updatedAt
}

// SetUpdatedAt sets the updatedAt.
func (c *Cost) SetUpdatedAt(updatedAt *time.Time) {
	c.updatedAt = updatedAt
}

// CreatedByFirstName returns createdByFirstName.
func (c *Cost) CreatedByFirstName() *string {
	return c.createdByFirstName
}

// SetCreatedByFirstName sets the createdByFirstName.
func (c *Cost) SetCreatedByFirstName(createdByFirstName *string) {
	c.createdByFirstName = createdByFirstName
}

// CreatedBySurname returns createdBySurname.
func (c *Cost) CreatedBySurname() *string {
	return c.createdBySurname
}

// SetCreatedBySurname sets the createdBySurname.
func (c *Cost) SetCreatedBySurname(createdBySurname *string) {
	c.createdBySurname = createdBySurname
}

// UpdatedByFirstName returns updatedByFirstName.
func (c *Cost) UpdatedByFirstName() *string {
	return c.updatedByFirstName
}

// SetUpdatedByFirstName sets the updatedByFirstName.
func (c *Cost) SetUpdatedByFirstName(updatedByFirstName *string) {
	c.updatedByFirstName = updatedByFirstName
}

// UpdatedBySurname returns updatedBySurname.
func (c *Cost) UpdatedBySurname() *string {
	return c.updatedBySurname
}

// SetUpdatedBySurname sets the updatedBySurname.
func (c *Cost) SetUpdatedBySurname(updatedBySurname *string) {
	c.updatedBySurname = updatedBySurname
}

// IsUpdated returns true if UpdatedByID is set.
func (c *Cost) IsUpdated() bool {
	return c.updatedByID != nil
}

func newCost() *Cost {
	return &Cost{}
}

// New returns a new instance of CostEntity.
func NewCostEntity() CostEntity {
	return newCost()
}
