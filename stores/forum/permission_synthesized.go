// Code generated by espal-store-synthesizer. DO NOT EDIT.
package forum

import (
	"time"

	"github.com/espal-digital-development/espal-core/database"
)

var _ PermissionEntity = &Permission{}

type PermissionEntity interface {
	database.Model
	ForumID() *string
	SetForumID(forumID *string)
	UserID() *string
	SetUserID(userID *string)
	Permission() uint8
	SetPermission(permission uint8)
}

// ID returns id.
func (permission *Permission) ID() string {
	return permission.id
}

// CreatedByID returns createdByID.
func (permission *Permission) CreatedByID() string {
	return permission.createdByID
}

// SetCreatedByID sets the createdByID.
func (permission *Permission) SetCreatedByID(createdByID string) {
	permission.createdByID = createdByID
}

// UpdatedByID returns updatedByID.
func (permission *Permission) UpdatedByID() *string {
	return permission.updatedByID
}

// SetUpdatedByID sets the updatedByID.
func (permission *Permission) SetUpdatedByID(updatedByID *string) {
	permission.updatedByID = updatedByID
}

// CreatedAt returns createdAt.
func (permission *Permission) CreatedAt() time.Time {
	return permission.createdAt
}

// SetCreatedAt sets the createdAt.
func (permission *Permission) SetCreatedAt(createdAt time.Time) {
	permission.createdAt = createdAt
}

// UpdatedAt returns updatedAt.
func (permission *Permission) UpdatedAt() *time.Time {
	return permission.updatedAt
}

// SetUpdatedAt sets the updatedAt.
func (permission *Permission) SetUpdatedAt(updatedAt *time.Time) {
	permission.updatedAt = updatedAt
}

// CreatedByFirstName returns createdByFirstName.
func (permission *Permission) CreatedByFirstName() *string {
	return permission.createdByFirstName
}

// SetCreatedByFirstName sets the createdByFirstName.
func (permission *Permission) SetCreatedByFirstName(createdByFirstName *string) {
	permission.createdByFirstName = createdByFirstName
}

// CreatedBySurname returns createdBySurname.
func (permission *Permission) CreatedBySurname() *string {
	return permission.createdBySurname
}

// SetCreatedBySurname sets the createdBySurname.
func (permission *Permission) SetCreatedBySurname(createdBySurname *string) {
	permission.createdBySurname = createdBySurname
}

// UpdatedByFirstName returns updatedByFirstName.
func (permission *Permission) UpdatedByFirstName() *string {
	return permission.updatedByFirstName
}

// SetUpdatedByFirstName sets the updatedByFirstName.
func (permission *Permission) SetUpdatedByFirstName(updatedByFirstName *string) {
	permission.updatedByFirstName = updatedByFirstName
}

// UpdatedBySurname returns updatedBySurname.
func (permission *Permission) UpdatedBySurname() *string {
	return permission.updatedBySurname
}

// SetUpdatedBySurname sets the updatedBySurname.
func (permission *Permission) SetUpdatedBySurname(updatedBySurname *string) {
	permission.updatedBySurname = updatedBySurname
}

// IsUpdated returns true if UpdatedByID is set.
func (permission *Permission) IsUpdated() bool {
	return permission.updatedByID != nil
}

// ForumID returns forumID.
func (permission *Permission) ForumID() *string {
	return permission.forumID
}

// SetForumID sets the forumID.
func (permission *Permission) SetForumID(forumID *string) {
	permission.forumID = forumID
}

// UserID returns userID.
func (permission *Permission) UserID() *string {
	return permission.userID
}

// SetUserID sets the userID.
func (permission *Permission) SetUserID(userID *string) {
	permission.userID = userID
}

// Permission returns permission.
func (permission *Permission) Permission() uint8 {
	return permission.permission
}

// SetPermission sets the permission.
func (permissionEntity *Permission) SetPermission(permission uint8) {
	permissionEntity.permission = permission
}

func newPermission() *Permission {
	return &Permission{}
}

// New returns a new instance of PermissionEntity.
func NewPermissionEntity() PermissionEntity {
	return newPermission()
}
