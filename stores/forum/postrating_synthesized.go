// Code generated by espal-store-synthesizer. DO NOT EDIT.
package forum

import (
	"time"

	"github.com/espal-digital-development/espal-core/database"
)

var _ PostRatingEntity = &PostRating{}

type PostRatingEntity interface {
	database.Model
	PostID() *string
	SetPostID(postID *string)
	Score() float64
	SetScore(score float64)
}

// ID returns id.
func (p *PostRating) ID() string {
	return p.id
}

// CreatedByID returns createdByID.
func (p *PostRating) CreatedByID() string {
	return p.createdByID
}

// SetCreatedByID sets the createdByID.
func (p *PostRating) SetCreatedByID(createdByID string) {
	p.createdByID = createdByID
}

// UpdatedByID returns updatedByID.
func (p *PostRating) UpdatedByID() *string {
	return p.updatedByID
}

// SetUpdatedByID sets the updatedByID.
func (p *PostRating) SetUpdatedByID(updatedByID *string) {
	p.updatedByID = updatedByID
}

// CreatedAt returns createdAt.
func (p *PostRating) CreatedAt() time.Time {
	return p.createdAt
}

// SetCreatedAt sets the createdAt.
func (p *PostRating) SetCreatedAt(createdAt time.Time) {
	p.createdAt = createdAt
}

// UpdatedAt returns updatedAt.
func (p *PostRating) UpdatedAt() *time.Time {
	return p.updatedAt
}

// SetUpdatedAt sets the updatedAt.
func (p *PostRating) SetUpdatedAt(updatedAt *time.Time) {
	p.updatedAt = updatedAt
}

// CreatedByFirstName returns createdByFirstName.
func (p *PostRating) CreatedByFirstName() *string {
	return p.createdByFirstName
}

// SetCreatedByFirstName sets the createdByFirstName.
func (p *PostRating) SetCreatedByFirstName(createdByFirstName *string) {
	p.createdByFirstName = createdByFirstName
}

// CreatedBySurname returns createdBySurname.
func (p *PostRating) CreatedBySurname() *string {
	return p.createdBySurname
}

// SetCreatedBySurname sets the createdBySurname.
func (p *PostRating) SetCreatedBySurname(createdBySurname *string) {
	p.createdBySurname = createdBySurname
}

// UpdatedByFirstName returns updatedByFirstName.
func (p *PostRating) UpdatedByFirstName() *string {
	return p.updatedByFirstName
}

// SetUpdatedByFirstName sets the updatedByFirstName.
func (p *PostRating) SetUpdatedByFirstName(updatedByFirstName *string) {
	p.updatedByFirstName = updatedByFirstName
}

// UpdatedBySurname returns updatedBySurname.
func (p *PostRating) UpdatedBySurname() *string {
	return p.updatedBySurname
}

// SetUpdatedBySurname sets the updatedBySurname.
func (p *PostRating) SetUpdatedBySurname(updatedBySurname *string) {
	p.updatedBySurname = updatedBySurname
}

// IsUpdated returns true if UpdatedByID is set.
func (p *PostRating) IsUpdated() bool {
	return p.updatedByID != nil
}

// PostID returns postID.
func (p *PostRating) PostID() *string {
	return p.postID
}

// SetPostID sets the postID.
func (p *PostRating) SetPostID(postID *string) {
	p.postID = postID
}

// Score returns score.
func (p *PostRating) Score() float64 {
	return p.score
}

// SetScore sets the score.
func (p *PostRating) SetScore(score float64) {
	p.score = score
}

func newPostRating() *PostRating {
	return &PostRating{}
}

// New returns a new instance of PostRatingEntity.
func NewPostRatingEntity() PostRatingEntity {
	return newPostRating()
}
