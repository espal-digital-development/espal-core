// Code generated by espal-store-synthesizer. DO NOT EDIT.
package emailtemplate

import (
	"time"

	"github.com/espal-digital-development/espal-core/database"
)

var _ EmailTemplateEntity = &EmailTemplate{}

type EmailTemplateEntity interface {
	database.Model
	DomainID() string
	SetDomainID(domainID string)
	Active() bool
	SetActive(active bool)
}

// TableName returns the table name that belongs to the current model.
func (e *EmailTemplate) TableName() string {
	return "EmailTemplate"
}

// TableAlias returns the unique resolved table alias for use in queries.
func (e *EmailTemplate) TableAlias() string {
	return "ete"
}

// ID returns id.
func (e *EmailTemplate) ID() string {
	return e.id
}

// CreatedByID returns createdByID.
func (e *EmailTemplate) CreatedByID() string {
	return e.createdByID
}

// SetCreatedByID sets the createdByID.
func (e *EmailTemplate) SetCreatedByID(createdByID string) {
	e.createdByID = createdByID
}

// UpdatedByID returns updatedByID.
func (e *EmailTemplate) UpdatedByID() *string {
	return e.updatedByID
}

// SetUpdatedByID sets the updatedByID.
func (e *EmailTemplate) SetUpdatedByID(updatedByID *string) {
	e.updatedByID = updatedByID
}

// CreatedAt returns createdAt.
func (e *EmailTemplate) CreatedAt() time.Time {
	return e.createdAt
}

// SetCreatedAt sets the createdAt.
func (e *EmailTemplate) SetCreatedAt(createdAt time.Time) {
	e.createdAt = createdAt
}

// UpdatedAt returns updatedAt.
func (e *EmailTemplate) UpdatedAt() *time.Time {
	return e.updatedAt
}

// SetUpdatedAt sets the updatedAt.
func (e *EmailTemplate) SetUpdatedAt(updatedAt *time.Time) {
	e.updatedAt = updatedAt
}

// CreatedByFirstName returns createdByFirstName.
func (e *EmailTemplate) CreatedByFirstName() *string {
	return e.createdByFirstName
}

// SetCreatedByFirstName sets the createdByFirstName.
func (e *EmailTemplate) SetCreatedByFirstName(createdByFirstName *string) {
	e.createdByFirstName = createdByFirstName
}

// CreatedBySurname returns createdBySurname.
func (e *EmailTemplate) CreatedBySurname() *string {
	return e.createdBySurname
}

// SetCreatedBySurname sets the createdBySurname.
func (e *EmailTemplate) SetCreatedBySurname(createdBySurname *string) {
	e.createdBySurname = createdBySurname
}

// UpdatedByFirstName returns updatedByFirstName.
func (e *EmailTemplate) UpdatedByFirstName() *string {
	return e.updatedByFirstName
}

// SetUpdatedByFirstName sets the updatedByFirstName.
func (e *EmailTemplate) SetUpdatedByFirstName(updatedByFirstName *string) {
	e.updatedByFirstName = updatedByFirstName
}

// UpdatedBySurname returns updatedBySurname.
func (e *EmailTemplate) UpdatedBySurname() *string {
	return e.updatedBySurname
}

// SetUpdatedBySurname sets the updatedBySurname.
func (e *EmailTemplate) SetUpdatedBySurname(updatedBySurname *string) {
	e.updatedBySurname = updatedBySurname
}

// IsUpdated returns true if UpdatedByID is set.
func (e *EmailTemplate) IsUpdated() bool {
	return e.updatedByID != nil
}

// DomainID returns domainID.
func (e *EmailTemplate) DomainID() string {
	return e.domainID
}

// SetDomainID sets the domainID.
func (e *EmailTemplate) SetDomainID(domainID string) {
	e.domainID = domainID
}

// Active returns active.
func (e *EmailTemplate) Active() bool {
	return e.active
}

// SetActive sets the active.
func (e *EmailTemplate) SetActive(active bool) {
	e.active = active
}

func newEmailTemplate() *EmailTemplate {
	return &EmailTemplate{}
}

// New returns a new instance of EmailTemplateEntity.
func NewEmailTemplateEntity() EmailTemplateEntity {
	return newEmailTemplate()
}
