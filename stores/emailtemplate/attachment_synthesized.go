// Code generated by espal-store-synthesizer. DO NOT EDIT.
package emailtemplate

import (
	"time"

	"github.com/espal-digital-development/espal-core/database"
)

var _ AttachmentEntity = &Attachment{}

type AttachmentEntity interface {
	database.Model
	EmailTemplateID() string
	SetEmailTemplateID(emailTemplateID string)
	FilePath() string
	SetFilePath(filePath string)
	Language() *uint16
	SetLanguage(language *uint16)
}

// ID returns id.
func (attachment *Attachment) ID() string {
	return attachment.id
}

// CreatedByID returns createdByID.
func (attachment *Attachment) CreatedByID() string {
	return attachment.createdByID
}

// SetCreatedByID sets the createdByID.
func (attachment *Attachment) SetCreatedByID(createdByID string) {
	attachment.createdByID = createdByID
}

// UpdatedByID returns updatedByID.
func (attachment *Attachment) UpdatedByID() *string {
	return attachment.updatedByID
}

// SetUpdatedByID sets the updatedByID.
func (attachment *Attachment) SetUpdatedByID(updatedByID *string) {
	attachment.updatedByID = updatedByID
}

// CreatedAt returns createdAt.
func (attachment *Attachment) CreatedAt() time.Time {
	return attachment.createdAt
}

// SetCreatedAt sets the createdAt.
func (attachment *Attachment) SetCreatedAt(createdAt time.Time) {
	attachment.createdAt = createdAt
}

// UpdatedAt returns updatedAt.
func (attachment *Attachment) UpdatedAt() *time.Time {
	return attachment.updatedAt
}

// SetUpdatedAt sets the updatedAt.
func (attachment *Attachment) SetUpdatedAt(updatedAt *time.Time) {
	attachment.updatedAt = updatedAt
}

// CreatedByFirstName returns createdByFirstName.
func (attachment *Attachment) CreatedByFirstName() *string {
	return attachment.createdByFirstName
}

// SetCreatedByFirstName sets the createdByFirstName.
func (attachment *Attachment) SetCreatedByFirstName(createdByFirstName *string) {
	attachment.createdByFirstName = createdByFirstName
}

// CreatedBySurname returns createdBySurname.
func (attachment *Attachment) CreatedBySurname() *string {
	return attachment.createdBySurname
}

// SetCreatedBySurname sets the createdBySurname.
func (attachment *Attachment) SetCreatedBySurname(createdBySurname *string) {
	attachment.createdBySurname = createdBySurname
}

// UpdatedByFirstName returns updatedByFirstName.
func (attachment *Attachment) UpdatedByFirstName() *string {
	return attachment.updatedByFirstName
}

// SetUpdatedByFirstName sets the updatedByFirstName.
func (attachment *Attachment) SetUpdatedByFirstName(updatedByFirstName *string) {
	attachment.updatedByFirstName = updatedByFirstName
}

// UpdatedBySurname returns updatedBySurname.
func (attachment *Attachment) UpdatedBySurname() *string {
	return attachment.updatedBySurname
}

// SetUpdatedBySurname sets the updatedBySurname.
func (attachment *Attachment) SetUpdatedBySurname(updatedBySurname *string) {
	attachment.updatedBySurname = updatedBySurname
}

// IsUpdated returns true if UpdatedByID is set.
func (attachment *Attachment) IsUpdated() bool {
	return attachment.updatedByID != nil
}

// EmailTemplateID returns emailTemplateID.
func (attachment *Attachment) EmailTemplateID() string {
	return attachment.emailTemplateID
}

// SetEmailTemplateID sets the emailTemplateID.
func (attachment *Attachment) SetEmailTemplateID(emailTemplateID string) {
	attachment.emailTemplateID = emailTemplateID
}

// FilePath returns filePath.
func (attachment *Attachment) FilePath() string {
	return attachment.filePath
}

// SetFilePath sets the filePath.
func (attachment *Attachment) SetFilePath(filePath string) {
	attachment.filePath = filePath
}

// Language returns language.
func (attachment *Attachment) Language() *uint16 {
	return attachment.language
}

// SetLanguage sets the language.
func (attachment *Attachment) SetLanguage(language *uint16) {
	attachment.language = language
}

func newAttachment() *Attachment {
	return &Attachment{}
}

// New returns a new instance of AttachmentEntity.
func NewAttachmentEntity() AttachmentEntity {
	return newAttachment()
}
