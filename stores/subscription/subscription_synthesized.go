// Code generated by espal-store-synthesizer. DO NOT EDIT.
package subscription

import (
	"time"

	"github.com/espal-digital-development/espal-core/database"
)

var _ SubscriptionEntity = &Subscription{}

type SubscriptionEntity interface {
	database.Model
}

// TableName returns the table name that belongs to the current model.
func (subscription *Subscription) TableName() string {
	return "Subscription"
}

// ID returns id.
func (subscription *Subscription) ID() string {
	return subscription.id
}

// CreatedByID returns createdByID.
func (subscription *Subscription) CreatedByID() string {
	return subscription.createdByID
}

// SetCreatedByID sets the createdByID.
func (subscription *Subscription) SetCreatedByID(createdByID string) {
	subscription.createdByID = createdByID
}

// UpdatedByID returns updatedByID.
func (subscription *Subscription) UpdatedByID() *string {
	return subscription.updatedByID
}

// SetUpdatedByID sets the updatedByID.
func (subscription *Subscription) SetUpdatedByID(updatedByID *string) {
	subscription.updatedByID = updatedByID
}

// CreatedAt returns createdAt.
func (subscription *Subscription) CreatedAt() time.Time {
	return subscription.createdAt
}

// SetCreatedAt sets the createdAt.
func (subscription *Subscription) SetCreatedAt(createdAt time.Time) {
	subscription.createdAt = createdAt
}

// UpdatedAt returns updatedAt.
func (subscription *Subscription) UpdatedAt() *time.Time {
	return subscription.updatedAt
}

// SetUpdatedAt sets the updatedAt.
func (subscription *Subscription) SetUpdatedAt(updatedAt *time.Time) {
	subscription.updatedAt = updatedAt
}

// CreatedByFirstName returns createdByFirstName.
func (subscription *Subscription) CreatedByFirstName() *string {
	return subscription.createdByFirstName
}

// SetCreatedByFirstName sets the createdByFirstName.
func (subscription *Subscription) SetCreatedByFirstName(createdByFirstName *string) {
	subscription.createdByFirstName = createdByFirstName
}

// CreatedBySurname returns createdBySurname.
func (subscription *Subscription) CreatedBySurname() *string {
	return subscription.createdBySurname
}

// SetCreatedBySurname sets the createdBySurname.
func (subscription *Subscription) SetCreatedBySurname(createdBySurname *string) {
	subscription.createdBySurname = createdBySurname
}

// UpdatedByFirstName returns updatedByFirstName.
func (subscription *Subscription) UpdatedByFirstName() *string {
	return subscription.updatedByFirstName
}

// SetUpdatedByFirstName sets the updatedByFirstName.
func (subscription *Subscription) SetUpdatedByFirstName(updatedByFirstName *string) {
	subscription.updatedByFirstName = updatedByFirstName
}

// UpdatedBySurname returns updatedBySurname.
func (subscription *Subscription) UpdatedBySurname() *string {
	return subscription.updatedBySurname
}

// SetUpdatedBySurname sets the updatedBySurname.
func (subscription *Subscription) SetUpdatedBySurname(updatedBySurname *string) {
	subscription.updatedBySurname = updatedBySurname
}

// IsUpdated returns true if UpdatedByID is set.
func (subscription *Subscription) IsUpdated() bool {
	return subscription.updatedByID != nil
}

func newSubscription() *Subscription {
	return &Subscription{}
}

// New returns a new instance of SubscriptionEntity.
func NewSubscriptionEntity() SubscriptionEntity {
	return newSubscription()
}
