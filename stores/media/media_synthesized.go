// Code generated by espal-store-synthesizer. DO NOT EDIT.
package media

import (
	"time"

	"github.com/espal-digital-development/espal-core/database"
)

var _ MediaEntity = &Media{}

type MediaEntity interface {
	database.Model
	Active() bool
	SetActive(active bool)
	FilePath() string
	SetFilePath(filePath string)
}

// TableName returns the table name that belongs to the current model.
func (m *Media) TableName() string {
	return "Media"
}

// TableAlias returns the unique resolved table alias for use in queries.
func (m *Media) TableAlias() string {
	return "me"
}

// ID returns id.
func (m *Media) ID() string {
	return m.id
}

// CreatedByID returns createdByID.
func (m *Media) CreatedByID() string {
	return m.createdByID
}

// SetCreatedByID sets the createdByID.
func (m *Media) SetCreatedByID(createdByID string) {
	m.createdByID = createdByID
}

// UpdatedByID returns updatedByID.
func (m *Media) UpdatedByID() *string {
	return m.updatedByID
}

// SetUpdatedByID sets the updatedByID.
func (m *Media) SetUpdatedByID(updatedByID *string) {
	m.updatedByID = updatedByID
}

// CreatedAt returns createdAt.
func (m *Media) CreatedAt() time.Time {
	return m.createdAt
}

// SetCreatedAt sets the createdAt.
func (m *Media) SetCreatedAt(createdAt time.Time) {
	m.createdAt = createdAt
}

// UpdatedAt returns updatedAt.
func (m *Media) UpdatedAt() *time.Time {
	return m.updatedAt
}

// SetUpdatedAt sets the updatedAt.
func (m *Media) SetUpdatedAt(updatedAt *time.Time) {
	m.updatedAt = updatedAt
}

// CreatedByFirstName returns createdByFirstName.
func (m *Media) CreatedByFirstName() *string {
	return m.createdByFirstName
}

// SetCreatedByFirstName sets the createdByFirstName.
func (m *Media) SetCreatedByFirstName(createdByFirstName *string) {
	m.createdByFirstName = createdByFirstName
}

// CreatedBySurname returns createdBySurname.
func (m *Media) CreatedBySurname() *string {
	return m.createdBySurname
}

// SetCreatedBySurname sets the createdBySurname.
func (m *Media) SetCreatedBySurname(createdBySurname *string) {
	m.createdBySurname = createdBySurname
}

// UpdatedByFirstName returns updatedByFirstName.
func (m *Media) UpdatedByFirstName() *string {
	return m.updatedByFirstName
}

// SetUpdatedByFirstName sets the updatedByFirstName.
func (m *Media) SetUpdatedByFirstName(updatedByFirstName *string) {
	m.updatedByFirstName = updatedByFirstName
}

// UpdatedBySurname returns updatedBySurname.
func (m *Media) UpdatedBySurname() *string {
	return m.updatedBySurname
}

// SetUpdatedBySurname sets the updatedBySurname.
func (m *Media) SetUpdatedBySurname(updatedBySurname *string) {
	m.updatedBySurname = updatedBySurname
}

// IsUpdated returns true if UpdatedByID is set.
func (m *Media) IsUpdated() bool {
	return m.updatedByID != nil
}

// Active returns active.
func (m *Media) Active() bool {
	return m.active
}

// SetActive sets the active.
func (m *Media) SetActive(active bool) {
	m.active = active
}

// FilePath returns filePath.
func (m *Media) FilePath() string {
	return m.filePath
}

// SetFilePath sets the filePath.
func (m *Media) SetFilePath(filePath string) {
	m.filePath = filePath
}

func newMedia() *Media {
	return &Media{}
}

// New returns a new instance of MediaEntity.
func NewMediaEntity() MediaEntity {
	return newMedia()
}
