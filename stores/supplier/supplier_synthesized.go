// Code generated by espal-store-synthesizer. DO NOT EDIT.
package supplier

import (
	"time"

	"github.com/espal-digital-development/espal-core/database"
)

var _ SupplierEntity = &Supplier{}

type SupplierEntity interface {
	database.Model
	Active() bool
	SetActive(active bool)
	Key() *string
	SetKey(key *string)
	Name() string
	SetName(name string)
	ContactFirstName() *string
	SetContactFirstName(contactFirstName *string)
	ContactSurname() *string
	SetContactSurname(contactSurname *string)
	Street() *string
	SetStreet(street *string)
	StreetLine2() *string
	SetStreetLine2(streetLine2 *string)
	Number() *string
	SetNumber(number *string)
	NumberAddition() *string
	SetNumberAddition(numberAddition *string)
	ZipCode() *string
	SetZipCode(zipCode *string)
	City() *string
	SetCity(city *string)
	State() *string
	SetState(state *string)
	Country() *uint16
	SetCountry(country *uint16)
	PhoneNumber() *string
	SetPhoneNumber(phoneNumber *string)
	Email() *string
	SetEmail(email *string)
	Comments() *string
	SetComments(comments *string)
}

// TableName returns the table name that belongs to the current model.
func (s *Supplier) TableName() string {
	return "Supplier"
}

// ID returns id.
func (s *Supplier) ID() string {
	return s.id
}

// CreatedByID returns createdByID.
func (s *Supplier) CreatedByID() string {
	return s.createdByID
}

// SetCreatedByID sets the createdByID.
func (s *Supplier) SetCreatedByID(createdByID string) {
	s.createdByID = createdByID
}

// UpdatedByID returns updatedByID.
func (s *Supplier) UpdatedByID() *string {
	return s.updatedByID
}

// SetUpdatedByID sets the updatedByID.
func (s *Supplier) SetUpdatedByID(updatedByID *string) {
	s.updatedByID = updatedByID
}

// CreatedAt returns createdAt.
func (s *Supplier) CreatedAt() time.Time {
	return s.createdAt
}

// SetCreatedAt sets the createdAt.
func (s *Supplier) SetCreatedAt(createdAt time.Time) {
	s.createdAt = createdAt
}

// UpdatedAt returns updatedAt.
func (s *Supplier) UpdatedAt() *time.Time {
	return s.updatedAt
}

// SetUpdatedAt sets the updatedAt.
func (s *Supplier) SetUpdatedAt(updatedAt *time.Time) {
	s.updatedAt = updatedAt
}

// CreatedByFirstName returns createdByFirstName.
func (s *Supplier) CreatedByFirstName() *string {
	return s.createdByFirstName
}

// SetCreatedByFirstName sets the createdByFirstName.
func (s *Supplier) SetCreatedByFirstName(createdByFirstName *string) {
	s.createdByFirstName = createdByFirstName
}

// CreatedBySurname returns createdBySurname.
func (s *Supplier) CreatedBySurname() *string {
	return s.createdBySurname
}

// SetCreatedBySurname sets the createdBySurname.
func (s *Supplier) SetCreatedBySurname(createdBySurname *string) {
	s.createdBySurname = createdBySurname
}

// UpdatedByFirstName returns updatedByFirstName.
func (s *Supplier) UpdatedByFirstName() *string {
	return s.updatedByFirstName
}

// SetUpdatedByFirstName sets the updatedByFirstName.
func (s *Supplier) SetUpdatedByFirstName(updatedByFirstName *string) {
	s.updatedByFirstName = updatedByFirstName
}

// UpdatedBySurname returns updatedBySurname.
func (s *Supplier) UpdatedBySurname() *string {
	return s.updatedBySurname
}

// SetUpdatedBySurname sets the updatedBySurname.
func (s *Supplier) SetUpdatedBySurname(updatedBySurname *string) {
	s.updatedBySurname = updatedBySurname
}

// IsUpdated returns true if UpdatedByID is set.
func (s *Supplier) IsUpdated() bool {
	return s.updatedByID != nil
}

// Active returns active.
func (s *Supplier) Active() bool {
	return s.active
}

// SetActive sets the active.
func (s *Supplier) SetActive(active bool) {
	s.active = active
}

// Key returns key.
func (s *Supplier) Key() *string {
	return s.key
}

// SetKey sets the key.
func (s *Supplier) SetKey(key *string) {
	s.key = key
}

// Name returns name.
func (s *Supplier) Name() string {
	return s.name
}

// SetName sets the name.
func (s *Supplier) SetName(name string) {
	s.name = name
}

// ContactFirstName returns contactFirstName.
func (s *Supplier) ContactFirstName() *string {
	return s.contactFirstName
}

// SetContactFirstName sets the contactFirstName.
func (s *Supplier) SetContactFirstName(contactFirstName *string) {
	s.contactFirstName = contactFirstName
}

// ContactSurname returns contactSurname.
func (s *Supplier) ContactSurname() *string {
	return s.contactSurname
}

// SetContactSurname sets the contactSurname.
func (s *Supplier) SetContactSurname(contactSurname *string) {
	s.contactSurname = contactSurname
}

// Street returns street.
func (s *Supplier) Street() *string {
	return s.street
}

// SetStreet sets the street.
func (s *Supplier) SetStreet(street *string) {
	s.street = street
}

// StreetLine2 returns streetLine2.
func (s *Supplier) StreetLine2() *string {
	return s.streetLine2
}

// SetStreetLine2 sets the streetLine2.
func (s *Supplier) SetStreetLine2(streetLine2 *string) {
	s.streetLine2 = streetLine2
}

// Number returns number.
func (s *Supplier) Number() *string {
	return s.number
}

// SetNumber sets the number.
func (s *Supplier) SetNumber(number *string) {
	s.number = number
}

// NumberAddition returns numberAddition.
func (s *Supplier) NumberAddition() *string {
	return s.numberAddition
}

// SetNumberAddition sets the numberAddition.
func (s *Supplier) SetNumberAddition(numberAddition *string) {
	s.numberAddition = numberAddition
}

// ZipCode returns zipCode.
func (s *Supplier) ZipCode() *string {
	return s.zipCode
}

// SetZipCode sets the zipCode.
func (s *Supplier) SetZipCode(zipCode *string) {
	s.zipCode = zipCode
}

// City returns city.
func (s *Supplier) City() *string {
	return s.city
}

// SetCity sets the city.
func (s *Supplier) SetCity(city *string) {
	s.city = city
}

// State returns state.
func (s *Supplier) State() *string {
	return s.state
}

// SetState sets the state.
func (s *Supplier) SetState(state *string) {
	s.state = state
}

// Country returns country.
func (s *Supplier) Country() *uint16 {
	return s.country
}

// SetCountry sets the country.
func (s *Supplier) SetCountry(country *uint16) {
	s.country = country
}

// PhoneNumber returns phoneNumber.
func (s *Supplier) PhoneNumber() *string {
	return s.phoneNumber
}

// SetPhoneNumber sets the phoneNumber.
func (s *Supplier) SetPhoneNumber(phoneNumber *string) {
	s.phoneNumber = phoneNumber
}

// Email returns email.
func (s *Supplier) Email() *string {
	return s.email
}

// SetEmail sets the email.
func (s *Supplier) SetEmail(email *string) {
	s.email = email
}

// Comments returns comments.
func (s *Supplier) Comments() *string {
	return s.comments
}

// SetComments sets the comments.
func (s *Supplier) SetComments(comments *string) {
	s.comments = comments
}

func newSupplier() *Supplier {
	return &Supplier{}
}

// New returns a new instance of SupplierEntity.
func NewSupplierEntity() SupplierEntity {
	return newSupplier()
}
