// Code generated by espal-store-synthesizer. DO NOT EDIT.
package frequentlyaskedquestion

import (
	"time"

	"github.com/espal-digital-development/espal-core/database"
)

var _ FrequentlyAskedQuestionEntity = &FrequentlyAskedQuestion{}

type FrequentlyAskedQuestionEntity interface {
	database.Model
	FrequentlyAskedQuestionSectionID() *string
	SetFrequentlyAskedQuestionSectionID(frequentlyAskedQuestionSectionID *string)
	DomainID() string
	SetDomainID(domainID string)
	Active() bool
	SetActive(active bool)
	Sorting() uint
	SetSorting(sorting uint)
}

// TableName returns the table name that belongs to the current model.
func (frequentlyAskedQuestion *FrequentlyAskedQuestion) TableName() string {
	return "FrequentlyAskedQuestion"
}

// TableAlias returns the unique resolved table alias for use in queries.
func (frequentlyAskedQuestion *FrequentlyAskedQuestion) TableAlias() string {
	return "faqe"
}

// ID returns id.
func (frequentlyAskedQuestion *FrequentlyAskedQuestion) ID() string {
	return frequentlyAskedQuestion.id
}

// CreatedByID returns createdByID.
func (frequentlyAskedQuestion *FrequentlyAskedQuestion) CreatedByID() string {
	return frequentlyAskedQuestion.createdByID
}

// SetCreatedByID sets the createdByID.
func (frequentlyAskedQuestion *FrequentlyAskedQuestion) SetCreatedByID(createdByID string) {
	frequentlyAskedQuestion.createdByID = createdByID
}

// UpdatedByID returns updatedByID.
func (frequentlyAskedQuestion *FrequentlyAskedQuestion) UpdatedByID() *string {
	return frequentlyAskedQuestion.updatedByID
}

// SetUpdatedByID sets the updatedByID.
func (frequentlyAskedQuestion *FrequentlyAskedQuestion) SetUpdatedByID(updatedByID *string) {
	frequentlyAskedQuestion.updatedByID = updatedByID
}

// CreatedAt returns createdAt.
func (frequentlyAskedQuestion *FrequentlyAskedQuestion) CreatedAt() time.Time {
	return frequentlyAskedQuestion.createdAt
}

// SetCreatedAt sets the createdAt.
func (frequentlyAskedQuestion *FrequentlyAskedQuestion) SetCreatedAt(createdAt time.Time) {
	frequentlyAskedQuestion.createdAt = createdAt
}

// UpdatedAt returns updatedAt.
func (frequentlyAskedQuestion *FrequentlyAskedQuestion) UpdatedAt() *time.Time {
	return frequentlyAskedQuestion.updatedAt
}

// SetUpdatedAt sets the updatedAt.
func (frequentlyAskedQuestion *FrequentlyAskedQuestion) SetUpdatedAt(updatedAt *time.Time) {
	frequentlyAskedQuestion.updatedAt = updatedAt
}

// CreatedByFirstName returns createdByFirstName.
func (frequentlyAskedQuestion *FrequentlyAskedQuestion) CreatedByFirstName() *string {
	return frequentlyAskedQuestion.createdByFirstName
}

// SetCreatedByFirstName sets the createdByFirstName.
func (frequentlyAskedQuestion *FrequentlyAskedQuestion) SetCreatedByFirstName(createdByFirstName *string) {
	frequentlyAskedQuestion.createdByFirstName = createdByFirstName
}

// CreatedBySurname returns createdBySurname.
func (frequentlyAskedQuestion *FrequentlyAskedQuestion) CreatedBySurname() *string {
	return frequentlyAskedQuestion.createdBySurname
}

// SetCreatedBySurname sets the createdBySurname.
func (frequentlyAskedQuestion *FrequentlyAskedQuestion) SetCreatedBySurname(createdBySurname *string) {
	frequentlyAskedQuestion.createdBySurname = createdBySurname
}

// UpdatedByFirstName returns updatedByFirstName.
func (frequentlyAskedQuestion *FrequentlyAskedQuestion) UpdatedByFirstName() *string {
	return frequentlyAskedQuestion.updatedByFirstName
}

// SetUpdatedByFirstName sets the updatedByFirstName.
func (frequentlyAskedQuestion *FrequentlyAskedQuestion) SetUpdatedByFirstName(updatedByFirstName *string) {
	frequentlyAskedQuestion.updatedByFirstName = updatedByFirstName
}

// UpdatedBySurname returns updatedBySurname.
func (frequentlyAskedQuestion *FrequentlyAskedQuestion) UpdatedBySurname() *string {
	return frequentlyAskedQuestion.updatedBySurname
}

// SetUpdatedBySurname sets the updatedBySurname.
func (frequentlyAskedQuestion *FrequentlyAskedQuestion) SetUpdatedBySurname(updatedBySurname *string) {
	frequentlyAskedQuestion.updatedBySurname = updatedBySurname
}

// IsUpdated returns true if UpdatedByID is set.
func (frequentlyAskedQuestion *FrequentlyAskedQuestion) IsUpdated() bool {
	return frequentlyAskedQuestion.updatedByID != nil
}

// FrequentlyAskedQuestionSectionID returns frequentlyAskedQuestionSectionID.
func (frequentlyAskedQuestion *FrequentlyAskedQuestion) FrequentlyAskedQuestionSectionID() *string {
	return frequentlyAskedQuestion.frequentlyAskedQuestionSectionID
}

// SetFrequentlyAskedQuestionSectionID sets the frequentlyAskedQuestionSectionID.
func (frequentlyAskedQuestion *FrequentlyAskedQuestion) SetFrequentlyAskedQuestionSectionID(frequentlyAskedQuestionSectionID *string) {
	frequentlyAskedQuestion.frequentlyAskedQuestionSectionID = frequentlyAskedQuestionSectionID
}

// DomainID returns domainID.
func (frequentlyAskedQuestion *FrequentlyAskedQuestion) DomainID() string {
	return frequentlyAskedQuestion.domainID
}

// SetDomainID sets the domainID.
func (frequentlyAskedQuestion *FrequentlyAskedQuestion) SetDomainID(domainID string) {
	frequentlyAskedQuestion.domainID = domainID
}

// Active returns active.
func (frequentlyAskedQuestion *FrequentlyAskedQuestion) Active() bool {
	return frequentlyAskedQuestion.active
}

// SetActive sets the active.
func (frequentlyAskedQuestion *FrequentlyAskedQuestion) SetActive(active bool) {
	frequentlyAskedQuestion.active = active
}

// Sorting returns sorting.
func (frequentlyAskedQuestion *FrequentlyAskedQuestion) Sorting() uint {
	return frequentlyAskedQuestion.sorting
}

// SetSorting sets the sorting.
func (frequentlyAskedQuestion *FrequentlyAskedQuestion) SetSorting(sorting uint) {
	frequentlyAskedQuestion.sorting = sorting
}

func newFrequentlyAskedQuestion() *FrequentlyAskedQuestion {
	return &FrequentlyAskedQuestion{}
}

// New returns a new instance of FrequentlyAskedQuestionEntity.
func NewFrequentlyAskedQuestionEntity() FrequentlyAskedQuestionEntity {
	return newFrequentlyAskedQuestion()
}
