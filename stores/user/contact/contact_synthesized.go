// Code generated by espal-store-synthesizer. DO NOT EDIT.
package contact

import (
	"time"

	"github.com/espal-digital-development/espal-core/database"
)

var _ ContactEntity = &Contact{}

type ContactEntity interface {
	database.Model
	UserID() *string
	SetUserID(userID *string)
	ContactID() string
	SetContactID(contactID string)
	Sorting() uint
	SetSorting(sorting uint)
	Comments() *string
	SetComments(comments *string)
	ContactFirstName() *string
	SetContactFirstName(contactFirstName *string)
	ContactSurname() *string
	SetContactSurname(contactSurname *string)
}

// TableAlias returns the unique resolved table alias for use in queries.
func (c *Contact) TableAlias() string {
	return "ce"
}

// ID returns id.
func (c *Contact) ID() string {
	return c.id
}

// CreatedByID returns createdByID.
func (c *Contact) CreatedByID() string {
	return c.createdByID
}

// SetCreatedByID sets the createdByID.
func (c *Contact) SetCreatedByID(createdByID string) {
	c.createdByID = createdByID
}

// UpdatedByID returns updatedByID.
func (c *Contact) UpdatedByID() *string {
	return c.updatedByID
}

// SetUpdatedByID sets the updatedByID.
func (c *Contact) SetUpdatedByID(updatedByID *string) {
	c.updatedByID = updatedByID
}

// CreatedAt returns createdAt.
func (c *Contact) CreatedAt() time.Time {
	return c.createdAt
}

// SetCreatedAt sets the createdAt.
func (c *Contact) SetCreatedAt(createdAt time.Time) {
	c.createdAt = createdAt
}

// UpdatedAt returns updatedAt.
func (c *Contact) UpdatedAt() *time.Time {
	return c.updatedAt
}

// SetUpdatedAt sets the updatedAt.
func (c *Contact) SetUpdatedAt(updatedAt *time.Time) {
	c.updatedAt = updatedAt
}

// CreatedByFirstName returns createdByFirstName.
func (c *Contact) CreatedByFirstName() *string {
	return c.createdByFirstName
}

// SetCreatedByFirstName sets the createdByFirstName.
func (c *Contact) SetCreatedByFirstName(createdByFirstName *string) {
	c.createdByFirstName = createdByFirstName
}

// CreatedBySurname returns createdBySurname.
func (c *Contact) CreatedBySurname() *string {
	return c.createdBySurname
}

// SetCreatedBySurname sets the createdBySurname.
func (c *Contact) SetCreatedBySurname(createdBySurname *string) {
	c.createdBySurname = createdBySurname
}

// UpdatedByFirstName returns updatedByFirstName.
func (c *Contact) UpdatedByFirstName() *string {
	return c.updatedByFirstName
}

// SetUpdatedByFirstName sets the updatedByFirstName.
func (c *Contact) SetUpdatedByFirstName(updatedByFirstName *string) {
	c.updatedByFirstName = updatedByFirstName
}

// UpdatedBySurname returns updatedBySurname.
func (c *Contact) UpdatedBySurname() *string {
	return c.updatedBySurname
}

// SetUpdatedBySurname sets the updatedBySurname.
func (c *Contact) SetUpdatedBySurname(updatedBySurname *string) {
	c.updatedBySurname = updatedBySurname
}

// IsUpdated returns true if UpdatedByID is set.
func (c *Contact) IsUpdated() bool {
	return c.updatedByID != nil
}

// UserID returns userID.
func (c *Contact) UserID() *string {
	return c.userID
}

// SetUserID sets the userID.
func (c *Contact) SetUserID(userID *string) {
	c.userID = userID
}

// ContactID returns contactID.
func (c *Contact) ContactID() string {
	return c.contactID
}

// SetContactID sets the contactID.
func (c *Contact) SetContactID(contactID string) {
	c.contactID = contactID
}

// Sorting returns sorting.
func (c *Contact) Sorting() uint {
	return c.sorting
}

// SetSorting sets the sorting.
func (c *Contact) SetSorting(sorting uint) {
	c.sorting = sorting
}

// Comments returns comments.
func (c *Contact) Comments() *string {
	return c.comments
}

// SetComments sets the comments.
func (c *Contact) SetComments(comments *string) {
	c.comments = comments
}

// ContactFirstName returns contactFirstName.
func (c *Contact) ContactFirstName() *string {
	return c.contactFirstName
}

// SetContactFirstName sets the contactFirstName.
func (c *Contact) SetContactFirstName(contactFirstName *string) {
	c.contactFirstName = contactFirstName
}

// ContactSurname returns contactSurname.
func (c *Contact) ContactSurname() *string {
	return c.contactSurname
}

// SetContactSurname sets the contactSurname.
func (c *Contact) SetContactSurname(contactSurname *string) {
	c.contactSurname = contactSurname
}

func newContact() *Contact {
	return &Contact{}
}

// New returns a new instance of ContactEntity.
func NewContactEntity() ContactEntity {
	return newContact()
}
