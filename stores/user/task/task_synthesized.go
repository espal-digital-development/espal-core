// Code generated by espal-store-synthesizer. DO NOT EDIT.
package task

import (
	"time"

	"github.com/espal-digital-development/espal-core/database"
)

var _ TaskEntity = &Task{}

type TaskEntity interface {
	database.Model
	IssuedByID() string
	SetIssuedByID(issuedByID string)
	AssignedToID() *string
	SetAssignedToID(assignedToID *string)
	Description() string
	SetDescription(description string)
	CompletedNotes() *string
	SetCompletedNotes(completedNotes *string)
	CompletedAt() *time.Time
	SetCompletedAt(completedAt *time.Time)
}

// ID returns id.
func (t *Task) ID() string {
	return t.id
}

// CreatedByID returns createdByID.
func (t *Task) CreatedByID() string {
	return t.createdByID
}

// SetCreatedByID sets the createdByID.
func (t *Task) SetCreatedByID(createdByID string) {
	t.createdByID = createdByID
}

// UpdatedByID returns updatedByID.
func (t *Task) UpdatedByID() *string {
	return t.updatedByID
}

// SetUpdatedByID sets the updatedByID.
func (t *Task) SetUpdatedByID(updatedByID *string) {
	t.updatedByID = updatedByID
}

// CreatedAt returns createdAt.
func (t *Task) CreatedAt() time.Time {
	return t.createdAt
}

// SetCreatedAt sets the createdAt.
func (t *Task) SetCreatedAt(createdAt time.Time) {
	t.createdAt = createdAt
}

// UpdatedAt returns updatedAt.
func (t *Task) UpdatedAt() *time.Time {
	return t.updatedAt
}

// SetUpdatedAt sets the updatedAt.
func (t *Task) SetUpdatedAt(updatedAt *time.Time) {
	t.updatedAt = updatedAt
}

// CreatedByFirstName returns createdByFirstName.
func (t *Task) CreatedByFirstName() *string {
	return t.createdByFirstName
}

// SetCreatedByFirstName sets the createdByFirstName.
func (t *Task) SetCreatedByFirstName(createdByFirstName *string) {
	t.createdByFirstName = createdByFirstName
}

// CreatedBySurname returns createdBySurname.
func (t *Task) CreatedBySurname() *string {
	return t.createdBySurname
}

// SetCreatedBySurname sets the createdBySurname.
func (t *Task) SetCreatedBySurname(createdBySurname *string) {
	t.createdBySurname = createdBySurname
}

// UpdatedByFirstName returns updatedByFirstName.
func (t *Task) UpdatedByFirstName() *string {
	return t.updatedByFirstName
}

// SetUpdatedByFirstName sets the updatedByFirstName.
func (t *Task) SetUpdatedByFirstName(updatedByFirstName *string) {
	t.updatedByFirstName = updatedByFirstName
}

// UpdatedBySurname returns updatedBySurname.
func (t *Task) UpdatedBySurname() *string {
	return t.updatedBySurname
}

// SetUpdatedBySurname sets the updatedBySurname.
func (t *Task) SetUpdatedBySurname(updatedBySurname *string) {
	t.updatedBySurname = updatedBySurname
}

// IsUpdated returns true if UpdatedByID is set.
func (t *Task) IsUpdated() bool {
	return t.updatedByID != nil
}

// IssuedByID returns issuedByID.
func (t *Task) IssuedByID() string {
	return t.issuedByID
}

// SetIssuedByID sets the issuedByID.
func (t *Task) SetIssuedByID(issuedByID string) {
	t.issuedByID = issuedByID
}

// AssignedToID returns assignedToID.
func (t *Task) AssignedToID() *string {
	return t.assignedToID
}

// SetAssignedToID sets the assignedToID.
func (t *Task) SetAssignedToID(assignedToID *string) {
	t.assignedToID = assignedToID
}

// Description returns description.
func (t *Task) Description() string {
	return t.description
}

// SetDescription sets the description.
func (t *Task) SetDescription(description string) {
	t.description = description
}

// CompletedNotes returns completedNotes.
func (t *Task) CompletedNotes() *string {
	return t.completedNotes
}

// SetCompletedNotes sets the completedNotes.
func (t *Task) SetCompletedNotes(completedNotes *string) {
	t.completedNotes = completedNotes
}

// CompletedAt returns completedAt.
func (t *Task) CompletedAt() *time.Time {
	return t.completedAt
}

// SetCompletedAt sets the completedAt.
func (t *Task) SetCompletedAt(completedAt *time.Time) {
	t.completedAt = completedAt
}

func newTask() *Task {
	return &Task{}
}

// New returns a new instance of TaskEntity.
func NewTaskEntity() TaskEntity {
	return newTask()
}
