// Code generated by espal-store-synthesizer. DO NOT EDIT.
package tag

import (
	"time"

	"github.com/espal-digital-development/espal-core/database"
)

var _ TagEntity = &Tag{}

type TagEntity interface {
	database.Model
	Active() bool
	SetActive(active bool)
	Sorting() uint
	SetSorting(sorting uint)
}

// TableName returns the table name that belongs to the current model.
func (t *Tag) TableName() string {
	return "Tag"
}

// TableAlias returns the unique resolved table alias for use in queries.
func (t *Tag) TableAlias() string {
	return "te"
}

// ID returns id.
func (t *Tag) ID() string {
	return t.id
}

// CreatedByID returns createdByID.
func (t *Tag) CreatedByID() string {
	return t.createdByID
}

// SetCreatedByID sets the createdByID.
func (t *Tag) SetCreatedByID(createdByID string) {
	t.createdByID = createdByID
}

// UpdatedByID returns updatedByID.
func (t *Tag) UpdatedByID() *string {
	return t.updatedByID
}

// SetUpdatedByID sets the updatedByID.
func (t *Tag) SetUpdatedByID(updatedByID *string) {
	t.updatedByID = updatedByID
}

// CreatedAt returns createdAt.
func (t *Tag) CreatedAt() time.Time {
	return t.createdAt
}

// SetCreatedAt sets the createdAt.
func (t *Tag) SetCreatedAt(createdAt time.Time) {
	t.createdAt = createdAt
}

// UpdatedAt returns updatedAt.
func (t *Tag) UpdatedAt() *time.Time {
	return t.updatedAt
}

// SetUpdatedAt sets the updatedAt.
func (t *Tag) SetUpdatedAt(updatedAt *time.Time) {
	t.updatedAt = updatedAt
}

// CreatedByFirstName returns createdByFirstName.
func (t *Tag) CreatedByFirstName() *string {
	return t.createdByFirstName
}

// SetCreatedByFirstName sets the createdByFirstName.
func (t *Tag) SetCreatedByFirstName(createdByFirstName *string) {
	t.createdByFirstName = createdByFirstName
}

// CreatedBySurname returns createdBySurname.
func (t *Tag) CreatedBySurname() *string {
	return t.createdBySurname
}

// SetCreatedBySurname sets the createdBySurname.
func (t *Tag) SetCreatedBySurname(createdBySurname *string) {
	t.createdBySurname = createdBySurname
}

// UpdatedByFirstName returns updatedByFirstName.
func (t *Tag) UpdatedByFirstName() *string {
	return t.updatedByFirstName
}

// SetUpdatedByFirstName sets the updatedByFirstName.
func (t *Tag) SetUpdatedByFirstName(updatedByFirstName *string) {
	t.updatedByFirstName = updatedByFirstName
}

// UpdatedBySurname returns updatedBySurname.
func (t *Tag) UpdatedBySurname() *string {
	return t.updatedBySurname
}

// SetUpdatedBySurname sets the updatedBySurname.
func (t *Tag) SetUpdatedBySurname(updatedBySurname *string) {
	t.updatedBySurname = updatedBySurname
}

// IsUpdated returns true if UpdatedByID is set.
func (t *Tag) IsUpdated() bool {
	return t.updatedByID != nil
}

// Active returns active.
func (t *Tag) Active() bool {
	return t.active
}

// SetActive sets the active.
func (t *Tag) SetActive(active bool) {
	t.active = active
}

// Sorting returns sorting.
func (t *Tag) Sorting() uint {
	return t.sorting
}

// SetSorting sets the sorting.
func (t *Tag) SetSorting(sorting uint) {
	t.sorting = sorting
}

func newTag() *Tag {
	return &Tag{}
}

// New returns a new instance of TagEntity.
func NewTagEntity() TagEntity {
	return newTag()
}
