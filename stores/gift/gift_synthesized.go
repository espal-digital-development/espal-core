// Code generated by espal-store-synthesizer. DO NOT EDIT.
package gift

import (
	"time"

	"github.com/espal-digital-development/espal-core/database"
)

var _ GiftEntity = &Gift{}

type GiftEntity interface {
	database.Model
}

// TableName returns the table name that belongs to the current model.
func (g *Gift) TableName() string {
	return "Gift"
}

// TableAlias returns the unique resolved table alias for use in queries.
func (g *Gift) TableAlias() string {
	return "ge"
}

// ID returns id.
func (g *Gift) ID() string {
	return g.id
}

// CreatedByID returns createdByID.
func (g *Gift) CreatedByID() string {
	return g.createdByID
}

// SetCreatedByID sets the createdByID.
func (g *Gift) SetCreatedByID(createdByID string) {
	g.createdByID = createdByID
}

// UpdatedByID returns updatedByID.
func (g *Gift) UpdatedByID() *string {
	return g.updatedByID
}

// SetUpdatedByID sets the updatedByID.
func (g *Gift) SetUpdatedByID(updatedByID *string) {
	g.updatedByID = updatedByID
}

// CreatedAt returns createdAt.
func (g *Gift) CreatedAt() time.Time {
	return g.createdAt
}

// SetCreatedAt sets the createdAt.
func (g *Gift) SetCreatedAt(createdAt time.Time) {
	g.createdAt = createdAt
}

// UpdatedAt returns updatedAt.
func (g *Gift) UpdatedAt() *time.Time {
	return g.updatedAt
}

// SetUpdatedAt sets the updatedAt.
func (g *Gift) SetUpdatedAt(updatedAt *time.Time) {
	g.updatedAt = updatedAt
}

// CreatedByFirstName returns createdByFirstName.
func (g *Gift) CreatedByFirstName() *string {
	return g.createdByFirstName
}

// SetCreatedByFirstName sets the createdByFirstName.
func (g *Gift) SetCreatedByFirstName(createdByFirstName *string) {
	g.createdByFirstName = createdByFirstName
}

// CreatedBySurname returns createdBySurname.
func (g *Gift) CreatedBySurname() *string {
	return g.createdBySurname
}

// SetCreatedBySurname sets the createdBySurname.
func (g *Gift) SetCreatedBySurname(createdBySurname *string) {
	g.createdBySurname = createdBySurname
}

// UpdatedByFirstName returns updatedByFirstName.
func (g *Gift) UpdatedByFirstName() *string {
	return g.updatedByFirstName
}

// SetUpdatedByFirstName sets the updatedByFirstName.
func (g *Gift) SetUpdatedByFirstName(updatedByFirstName *string) {
	g.updatedByFirstName = updatedByFirstName
}

// UpdatedBySurname returns updatedBySurname.
func (g *Gift) UpdatedBySurname() *string {
	return g.updatedBySurname
}

// SetUpdatedBySurname sets the updatedBySurname.
func (g *Gift) SetUpdatedBySurname(updatedBySurname *string) {
	g.updatedBySurname = updatedBySurname
}

// IsUpdated returns true if UpdatedByID is set.
func (g *Gift) IsUpdated() bool {
	return g.updatedByID != nil
}

func newGift() *Gift {
	return &Gift{}
}

// New returns a new instance of GiftEntity.
func NewGiftEntity() GiftEntity {
	return newGift()
}
