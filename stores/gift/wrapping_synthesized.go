// Code generated by espal-store-synthesizer. DO NOT EDIT.
package gift

import (
	"time"

	"github.com/espal-digital-development/espal-core/database"
)

var _ WrappingEntity = &Wrapping{}

type WrappingEntity interface {
	database.Model
}

// ID returns id.
func (wrapping *Wrapping) ID() string {
	return wrapping.id
}

// CreatedByID returns createdByID.
func (wrapping *Wrapping) CreatedByID() string {
	return wrapping.createdByID
}

// SetCreatedByID sets the createdByID.
func (wrapping *Wrapping) SetCreatedByID(createdByID string) {
	wrapping.createdByID = createdByID
}

// UpdatedByID returns updatedByID.
func (wrapping *Wrapping) UpdatedByID() *string {
	return wrapping.updatedByID
}

// SetUpdatedByID sets the updatedByID.
func (wrapping *Wrapping) SetUpdatedByID(updatedByID *string) {
	wrapping.updatedByID = updatedByID
}

// CreatedAt returns createdAt.
func (wrapping *Wrapping) CreatedAt() time.Time {
	return wrapping.createdAt
}

// SetCreatedAt sets the createdAt.
func (wrapping *Wrapping) SetCreatedAt(createdAt time.Time) {
	wrapping.createdAt = createdAt
}

// UpdatedAt returns updatedAt.
func (wrapping *Wrapping) UpdatedAt() *time.Time {
	return wrapping.updatedAt
}

// SetUpdatedAt sets the updatedAt.
func (wrapping *Wrapping) SetUpdatedAt(updatedAt *time.Time) {
	wrapping.updatedAt = updatedAt
}

// CreatedByFirstName returns createdByFirstName.
func (wrapping *Wrapping) CreatedByFirstName() *string {
	return wrapping.createdByFirstName
}

// SetCreatedByFirstName sets the createdByFirstName.
func (wrapping *Wrapping) SetCreatedByFirstName(createdByFirstName *string) {
	wrapping.createdByFirstName = createdByFirstName
}

// CreatedBySurname returns createdBySurname.
func (wrapping *Wrapping) CreatedBySurname() *string {
	return wrapping.createdBySurname
}

// SetCreatedBySurname sets the createdBySurname.
func (wrapping *Wrapping) SetCreatedBySurname(createdBySurname *string) {
	wrapping.createdBySurname = createdBySurname
}

// UpdatedByFirstName returns updatedByFirstName.
func (wrapping *Wrapping) UpdatedByFirstName() *string {
	return wrapping.updatedByFirstName
}

// SetUpdatedByFirstName sets the updatedByFirstName.
func (wrapping *Wrapping) SetUpdatedByFirstName(updatedByFirstName *string) {
	wrapping.updatedByFirstName = updatedByFirstName
}

// UpdatedBySurname returns updatedBySurname.
func (wrapping *Wrapping) UpdatedBySurname() *string {
	return wrapping.updatedBySurname
}

// SetUpdatedBySurname sets the updatedBySurname.
func (wrapping *Wrapping) SetUpdatedBySurname(updatedBySurname *string) {
	wrapping.updatedBySurname = updatedBySurname
}

// IsUpdated returns true if UpdatedByID is set.
func (wrapping *Wrapping) IsUpdated() bool {
	return wrapping.updatedByID != nil
}

func newWrapping() *Wrapping {
	return &Wrapping{}
}

// New returns a new instance of WrappingEntity.
func NewWrappingEntity() WrappingEntity {
	return newWrapping()
}
