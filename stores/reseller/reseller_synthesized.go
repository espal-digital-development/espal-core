// Code generated by espal-store-synthesizer. DO NOT EDIT.
package reseller

import (
	"time"

	"github.com/espal-digital-development/espal-core/database"
)

var _ ResellerEntity = &Reseller{}

type ResellerEntity interface {
	database.Model
	Active() bool
	SetActive(active bool)
	Country() *uint16
	SetCountry(country *uint16)
	Address() *string
	SetAddress(address *string)
}

// TableName returns the table name that belongs to the current model.
func (reseller *Reseller) TableName() string {
	return "Reseller"
}

// TableAlias returns the unique resolved table alias for use in queries.
func (reseller *Reseller) TableAlias() string {
	return "re"
}

// ID returns id.
func (reseller *Reseller) ID() string {
	return reseller.id
}

// CreatedByID returns createdByID.
func (reseller *Reseller) CreatedByID() string {
	return reseller.createdByID
}

// SetCreatedByID sets the createdByID.
func (reseller *Reseller) SetCreatedByID(createdByID string) {
	reseller.createdByID = createdByID
}

// UpdatedByID returns updatedByID.
func (reseller *Reseller) UpdatedByID() *string {
	return reseller.updatedByID
}

// SetUpdatedByID sets the updatedByID.
func (reseller *Reseller) SetUpdatedByID(updatedByID *string) {
	reseller.updatedByID = updatedByID
}

// CreatedAt returns createdAt.
func (reseller *Reseller) CreatedAt() time.Time {
	return reseller.createdAt
}

// SetCreatedAt sets the createdAt.
func (reseller *Reseller) SetCreatedAt(createdAt time.Time) {
	reseller.createdAt = createdAt
}

// UpdatedAt returns updatedAt.
func (reseller *Reseller) UpdatedAt() *time.Time {
	return reseller.updatedAt
}

// SetUpdatedAt sets the updatedAt.
func (reseller *Reseller) SetUpdatedAt(updatedAt *time.Time) {
	reseller.updatedAt = updatedAt
}

// CreatedByFirstName returns createdByFirstName.
func (reseller *Reseller) CreatedByFirstName() *string {
	return reseller.createdByFirstName
}

// SetCreatedByFirstName sets the createdByFirstName.
func (reseller *Reseller) SetCreatedByFirstName(createdByFirstName *string) {
	reseller.createdByFirstName = createdByFirstName
}

// CreatedBySurname returns createdBySurname.
func (reseller *Reseller) CreatedBySurname() *string {
	return reseller.createdBySurname
}

// SetCreatedBySurname sets the createdBySurname.
func (reseller *Reseller) SetCreatedBySurname(createdBySurname *string) {
	reseller.createdBySurname = createdBySurname
}

// UpdatedByFirstName returns updatedByFirstName.
func (reseller *Reseller) UpdatedByFirstName() *string {
	return reseller.updatedByFirstName
}

// SetUpdatedByFirstName sets the updatedByFirstName.
func (reseller *Reseller) SetUpdatedByFirstName(updatedByFirstName *string) {
	reseller.updatedByFirstName = updatedByFirstName
}

// UpdatedBySurname returns updatedBySurname.
func (reseller *Reseller) UpdatedBySurname() *string {
	return reseller.updatedBySurname
}

// SetUpdatedBySurname sets the updatedBySurname.
func (reseller *Reseller) SetUpdatedBySurname(updatedBySurname *string) {
	reseller.updatedBySurname = updatedBySurname
}

// IsUpdated returns true if UpdatedByID is set.
func (reseller *Reseller) IsUpdated() bool {
	return reseller.updatedByID != nil
}

// Active returns active.
func (reseller *Reseller) Active() bool {
	return reseller.active
}

// SetActive sets the active.
func (reseller *Reseller) SetActive(active bool) {
	reseller.active = active
}

// Country returns country.
func (reseller *Reseller) Country() *uint16 {
	return reseller.country
}

// SetCountry sets the country.
func (reseller *Reseller) SetCountry(country *uint16) {
	reseller.country = country
}

// Address returns address.
func (reseller *Reseller) Address() *string {
	return reseller.address
}

// SetAddress sets the address.
func (reseller *Reseller) SetAddress(address *string) {
	reseller.address = address
}

func newReseller() *Reseller {
	return &Reseller{}
}

// New returns a new instance of ResellerEntity.
func NewResellerEntity() ResellerEntity {
	return newReseller()
}
