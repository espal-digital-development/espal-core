// Code generated by espal-store-synthesizer. DO NOT EDIT.
package product

import (
	"time"

	"github.com/espal-digital-development/espal-core/database"
)

var _ ModelReviewEntity = &ModelReview{}

type ModelReviewEntity interface {
	database.Model
	ReviewedByID() *string
	SetReviewedByID(reviewedByID *string)
	ReviewedOnDate() *time.Time
	SetReviewedOnDate(reviewedOnDate *time.Time)
	ReviewNotes() *string
	SetReviewNotes(reviewNotes *string)
	Approved() *bool
	SetApproved(approved *bool)
	Rating() float32
	SetRating(rating float32)
	Title() string
	SetTitle(title string)
	Description() string
	SetDescription(description string)
	ModelID() string
	SetModelID(modelID string)
}

// ID returns id.
func (m *ModelReview) ID() string {
	return m.id
}

// CreatedByID returns createdByID.
func (m *ModelReview) CreatedByID() string {
	return m.createdByID
}

// SetCreatedByID sets the createdByID.
func (m *ModelReview) SetCreatedByID(createdByID string) {
	m.createdByID = createdByID
}

// UpdatedByID returns updatedByID.
func (m *ModelReview) UpdatedByID() *string {
	return m.updatedByID
}

// SetUpdatedByID sets the updatedByID.
func (m *ModelReview) SetUpdatedByID(updatedByID *string) {
	m.updatedByID = updatedByID
}

// CreatedAt returns createdAt.
func (m *ModelReview) CreatedAt() time.Time {
	return m.createdAt
}

// SetCreatedAt sets the createdAt.
func (m *ModelReview) SetCreatedAt(createdAt time.Time) {
	m.createdAt = createdAt
}

// UpdatedAt returns updatedAt.
func (m *ModelReview) UpdatedAt() *time.Time {
	return m.updatedAt
}

// SetUpdatedAt sets the updatedAt.
func (m *ModelReview) SetUpdatedAt(updatedAt *time.Time) {
	m.updatedAt = updatedAt
}

// CreatedByFirstName returns createdByFirstName.
func (m *ModelReview) CreatedByFirstName() *string {
	return m.createdByFirstName
}

// SetCreatedByFirstName sets the createdByFirstName.
func (m *ModelReview) SetCreatedByFirstName(createdByFirstName *string) {
	m.createdByFirstName = createdByFirstName
}

// CreatedBySurname returns createdBySurname.
func (m *ModelReview) CreatedBySurname() *string {
	return m.createdBySurname
}

// SetCreatedBySurname sets the createdBySurname.
func (m *ModelReview) SetCreatedBySurname(createdBySurname *string) {
	m.createdBySurname = createdBySurname
}

// UpdatedByFirstName returns updatedByFirstName.
func (m *ModelReview) UpdatedByFirstName() *string {
	return m.updatedByFirstName
}

// SetUpdatedByFirstName sets the updatedByFirstName.
func (m *ModelReview) SetUpdatedByFirstName(updatedByFirstName *string) {
	m.updatedByFirstName = updatedByFirstName
}

// UpdatedBySurname returns updatedBySurname.
func (m *ModelReview) UpdatedBySurname() *string {
	return m.updatedBySurname
}

// SetUpdatedBySurname sets the updatedBySurname.
func (m *ModelReview) SetUpdatedBySurname(updatedBySurname *string) {
	m.updatedBySurname = updatedBySurname
}

// IsUpdated returns true if UpdatedByID is set.
func (m *ModelReview) IsUpdated() bool {
	return m.updatedByID != nil
}

// ReviewedByID returns reviewedByID.
func (m *ModelReview) ReviewedByID() *string {
	return m.reviewedByID
}

// SetReviewedByID sets the reviewedByID.
func (m *ModelReview) SetReviewedByID(reviewedByID *string) {
	m.reviewedByID = reviewedByID
}

// ReviewedOnDate returns reviewedOnDate.
func (m *ModelReview) ReviewedOnDate() *time.Time {
	return m.reviewedOnDate
}

// SetReviewedOnDate sets the reviewedOnDate.
func (m *ModelReview) SetReviewedOnDate(reviewedOnDate *time.Time) {
	m.reviewedOnDate = reviewedOnDate
}

// ReviewNotes returns reviewNotes.
func (m *ModelReview) ReviewNotes() *string {
	return m.reviewNotes
}

// SetReviewNotes sets the reviewNotes.
func (m *ModelReview) SetReviewNotes(reviewNotes *string) {
	m.reviewNotes = reviewNotes
}

// Approved returns approved.
func (m *ModelReview) Approved() *bool {
	return m.approved
}

// SetApproved sets the approved.
func (m *ModelReview) SetApproved(approved *bool) {
	m.approved = approved
}

// Rating returns rating.
func (m *ModelReview) Rating() float32 {
	return m.rating
}

// SetRating sets the rating.
func (m *ModelReview) SetRating(rating float32) {
	m.rating = rating
}

// Title returns title.
func (m *ModelReview) Title() string {
	return m.title
}

// SetTitle sets the title.
func (m *ModelReview) SetTitle(title string) {
	m.title = title
}

// Description returns description.
func (m *ModelReview) Description() string {
	return m.description
}

// SetDescription sets the description.
func (m *ModelReview) SetDescription(description string) {
	m.description = description
}

// ModelID returns modelID.
func (m *ModelReview) ModelID() string {
	return m.modelID
}

// SetModelID sets the modelID.
func (m *ModelReview) SetModelID(modelID string) {
	m.modelID = modelID
}

func newModelReview() *ModelReview {
	return &ModelReview{}
}

// New returns a new instance of ModelReviewEntity.
func NewModelReviewEntity() ModelReviewEntity {
	return newModelReview()
}
