// Code generated by espal-store-synthesizer. DO NOT EDIT.
package product

import (
	"time"

	"github.com/espal-digital-development/espal-core/database"
)

var _ ModelDimensionEntity = &ModelDimension{}

type ModelDimensionEntity interface {
	database.Model
	Sorting() uint
	SetSorting(sorting uint)
	Key() *string
	SetKey(key *string)
	ModelID() string
	SetModelID(modelID string)
	PropertyID() string
	SetPropertyID(propertyID string)
}

// ID returns id.
func (modelDimension *ModelDimension) ID() string {
	return modelDimension.id
}

// CreatedByID returns createdByID.
func (modelDimension *ModelDimension) CreatedByID() string {
	return modelDimension.createdByID
}

// SetCreatedByID sets the createdByID.
func (modelDimension *ModelDimension) SetCreatedByID(createdByID string) {
	modelDimension.createdByID = createdByID
}

// UpdatedByID returns updatedByID.
func (modelDimension *ModelDimension) UpdatedByID() *string {
	return modelDimension.updatedByID
}

// SetUpdatedByID sets the updatedByID.
func (modelDimension *ModelDimension) SetUpdatedByID(updatedByID *string) {
	modelDimension.updatedByID = updatedByID
}

// CreatedAt returns createdAt.
func (modelDimension *ModelDimension) CreatedAt() time.Time {
	return modelDimension.createdAt
}

// SetCreatedAt sets the createdAt.
func (modelDimension *ModelDimension) SetCreatedAt(createdAt time.Time) {
	modelDimension.createdAt = createdAt
}

// UpdatedAt returns updatedAt.
func (modelDimension *ModelDimension) UpdatedAt() *time.Time {
	return modelDimension.updatedAt
}

// SetUpdatedAt sets the updatedAt.
func (modelDimension *ModelDimension) SetUpdatedAt(updatedAt *time.Time) {
	modelDimension.updatedAt = updatedAt
}

// CreatedByFirstName returns createdByFirstName.
func (modelDimension *ModelDimension) CreatedByFirstName() *string {
	return modelDimension.createdByFirstName
}

// SetCreatedByFirstName sets the createdByFirstName.
func (modelDimension *ModelDimension) SetCreatedByFirstName(createdByFirstName *string) {
	modelDimension.createdByFirstName = createdByFirstName
}

// CreatedBySurname returns createdBySurname.
func (modelDimension *ModelDimension) CreatedBySurname() *string {
	return modelDimension.createdBySurname
}

// SetCreatedBySurname sets the createdBySurname.
func (modelDimension *ModelDimension) SetCreatedBySurname(createdBySurname *string) {
	modelDimension.createdBySurname = createdBySurname
}

// UpdatedByFirstName returns updatedByFirstName.
func (modelDimension *ModelDimension) UpdatedByFirstName() *string {
	return modelDimension.updatedByFirstName
}

// SetUpdatedByFirstName sets the updatedByFirstName.
func (modelDimension *ModelDimension) SetUpdatedByFirstName(updatedByFirstName *string) {
	modelDimension.updatedByFirstName = updatedByFirstName
}

// UpdatedBySurname returns updatedBySurname.
func (modelDimension *ModelDimension) UpdatedBySurname() *string {
	return modelDimension.updatedBySurname
}

// SetUpdatedBySurname sets the updatedBySurname.
func (modelDimension *ModelDimension) SetUpdatedBySurname(updatedBySurname *string) {
	modelDimension.updatedBySurname = updatedBySurname
}

// IsUpdated returns true if UpdatedByID is set.
func (modelDimension *ModelDimension) IsUpdated() bool {
	return modelDimension.updatedByID != nil
}

// Sorting returns sorting.
func (modelDimension *ModelDimension) Sorting() uint {
	return modelDimension.sorting
}

// SetSorting sets the sorting.
func (modelDimension *ModelDimension) SetSorting(sorting uint) {
	modelDimension.sorting = sorting
}

// Key returns key.
func (modelDimension *ModelDimension) Key() *string {
	return modelDimension.key
}

// SetKey sets the key.
func (modelDimension *ModelDimension) SetKey(key *string) {
	modelDimension.key = key
}

// ModelID returns modelID.
func (modelDimension *ModelDimension) ModelID() string {
	return modelDimension.modelID
}

// SetModelID sets the modelID.
func (modelDimension *ModelDimension) SetModelID(modelID string) {
	modelDimension.modelID = modelID
}

// PropertyID returns propertyID.
func (modelDimension *ModelDimension) PropertyID() string {
	return modelDimension.propertyID
}

// SetPropertyID sets the propertyID.
func (modelDimension *ModelDimension) SetPropertyID(propertyID string) {
	modelDimension.propertyID = propertyID
}

func newModelDimension() *ModelDimension {
	return &ModelDimension{}
}

// New returns a new instance of ModelDimensionEntity.
func NewModelDimensionEntity() ModelDimensionEntity {
	return newModelDimension()
}
