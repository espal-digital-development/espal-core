// Code generated by espal-store-synthesizer. DO NOT EDIT.
package product

import (
	"time"

	"github.com/espal-digital-development/espal-core/database"
)

var _ ModelPropertyEntity = &ModelProperty{}

type ModelPropertyEntity interface {
	database.Model
	ProductModelID() string
	SetProductModelID(productModelID string)
	PropertyID() string
	SetPropertyID(propertyID string)
	Sorting() uint
	SetSorting(sorting uint)
	Key() *string
	SetKey(key *string)
}

// ID returns id.
func (modelProperty *ModelProperty) ID() string {
	return modelProperty.id
}

// CreatedByID returns createdByID.
func (modelProperty *ModelProperty) CreatedByID() string {
	return modelProperty.createdByID
}

// SetCreatedByID sets the createdByID.
func (modelProperty *ModelProperty) SetCreatedByID(createdByID string) {
	modelProperty.createdByID = createdByID
}

// UpdatedByID returns updatedByID.
func (modelProperty *ModelProperty) UpdatedByID() *string {
	return modelProperty.updatedByID
}

// SetUpdatedByID sets the updatedByID.
func (modelProperty *ModelProperty) SetUpdatedByID(updatedByID *string) {
	modelProperty.updatedByID = updatedByID
}

// CreatedAt returns createdAt.
func (modelProperty *ModelProperty) CreatedAt() time.Time {
	return modelProperty.createdAt
}

// SetCreatedAt sets the createdAt.
func (modelProperty *ModelProperty) SetCreatedAt(createdAt time.Time) {
	modelProperty.createdAt = createdAt
}

// UpdatedAt returns updatedAt.
func (modelProperty *ModelProperty) UpdatedAt() *time.Time {
	return modelProperty.updatedAt
}

// SetUpdatedAt sets the updatedAt.
func (modelProperty *ModelProperty) SetUpdatedAt(updatedAt *time.Time) {
	modelProperty.updatedAt = updatedAt
}

// CreatedByFirstName returns createdByFirstName.
func (modelProperty *ModelProperty) CreatedByFirstName() *string {
	return modelProperty.createdByFirstName
}

// SetCreatedByFirstName sets the createdByFirstName.
func (modelProperty *ModelProperty) SetCreatedByFirstName(createdByFirstName *string) {
	modelProperty.createdByFirstName = createdByFirstName
}

// CreatedBySurname returns createdBySurname.
func (modelProperty *ModelProperty) CreatedBySurname() *string {
	return modelProperty.createdBySurname
}

// SetCreatedBySurname sets the createdBySurname.
func (modelProperty *ModelProperty) SetCreatedBySurname(createdBySurname *string) {
	modelProperty.createdBySurname = createdBySurname
}

// UpdatedByFirstName returns updatedByFirstName.
func (modelProperty *ModelProperty) UpdatedByFirstName() *string {
	return modelProperty.updatedByFirstName
}

// SetUpdatedByFirstName sets the updatedByFirstName.
func (modelProperty *ModelProperty) SetUpdatedByFirstName(updatedByFirstName *string) {
	modelProperty.updatedByFirstName = updatedByFirstName
}

// UpdatedBySurname returns updatedBySurname.
func (modelProperty *ModelProperty) UpdatedBySurname() *string {
	return modelProperty.updatedBySurname
}

// SetUpdatedBySurname sets the updatedBySurname.
func (modelProperty *ModelProperty) SetUpdatedBySurname(updatedBySurname *string) {
	modelProperty.updatedBySurname = updatedBySurname
}

// IsUpdated returns true if UpdatedByID is set.
func (modelProperty *ModelProperty) IsUpdated() bool {
	return modelProperty.updatedByID != nil
}

// ProductModelID returns productModelID.
func (modelProperty *ModelProperty) ProductModelID() string {
	return modelProperty.productModelID
}

// SetProductModelID sets the productModelID.
func (modelProperty *ModelProperty) SetProductModelID(productModelID string) {
	modelProperty.productModelID = productModelID
}

// PropertyID returns propertyID.
func (modelProperty *ModelProperty) PropertyID() string {
	return modelProperty.propertyID
}

// SetPropertyID sets the propertyID.
func (modelProperty *ModelProperty) SetPropertyID(propertyID string) {
	modelProperty.propertyID = propertyID
}

// Sorting returns sorting.
func (modelProperty *ModelProperty) Sorting() uint {
	return modelProperty.sorting
}

// SetSorting sets the sorting.
func (modelProperty *ModelProperty) SetSorting(sorting uint) {
	modelProperty.sorting = sorting
}

// Key returns key.
func (modelProperty *ModelProperty) Key() *string {
	return modelProperty.key
}

// SetKey sets the key.
func (modelProperty *ModelProperty) SetKey(key *string) {
	modelProperty.key = key
}

func newModelProperty() *ModelProperty {
	return &ModelProperty{}
}

// New returns a new instance of ModelPropertyEntity.
func NewModelPropertyEntity() ModelPropertyEntity {
	return newModelProperty()
}
