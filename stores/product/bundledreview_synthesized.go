// Code generated by espal-store-synthesizer. DO NOT EDIT.
package product

import (
	"time"

	"github.com/espal-digital-development/espal-core/database"
)

var _ BundledReviewEntity = &BundledReview{}

type BundledReviewEntity interface {
	database.Model
	ReviewedByID() *string
	SetReviewedByID(reviewedByID *string)
	ReviewedOnDate() *time.Time
	SetReviewedOnDate(reviewedOnDate *time.Time)
	ReviewNotes() *string
	SetReviewNotes(reviewNotes *string)
	Approved() *bool
	SetApproved(approved *bool)
	Rating() float32
	SetRating(rating float32)
	Title() string
	SetTitle(title string)
	Description() string
	SetDescription(description string)
	BundledID() string
	SetBundledID(bundledID string)
}

// ID returns id.
func (b *BundledReview) ID() string {
	return b.id
}

// CreatedByID returns createdByID.
func (b *BundledReview) CreatedByID() string {
	return b.createdByID
}

// SetCreatedByID sets the createdByID.
func (b *BundledReview) SetCreatedByID(createdByID string) {
	b.createdByID = createdByID
}

// UpdatedByID returns updatedByID.
func (b *BundledReview) UpdatedByID() *string {
	return b.updatedByID
}

// SetUpdatedByID sets the updatedByID.
func (b *BundledReview) SetUpdatedByID(updatedByID *string) {
	b.updatedByID = updatedByID
}

// CreatedAt returns createdAt.
func (b *BundledReview) CreatedAt() time.Time {
	return b.createdAt
}

// SetCreatedAt sets the createdAt.
func (b *BundledReview) SetCreatedAt(createdAt time.Time) {
	b.createdAt = createdAt
}

// UpdatedAt returns updatedAt.
func (b *BundledReview) UpdatedAt() *time.Time {
	return b.updatedAt
}

// SetUpdatedAt sets the updatedAt.
func (b *BundledReview) SetUpdatedAt(updatedAt *time.Time) {
	b.updatedAt = updatedAt
}

// CreatedByFirstName returns createdByFirstName.
func (b *BundledReview) CreatedByFirstName() *string {
	return b.createdByFirstName
}

// SetCreatedByFirstName sets the createdByFirstName.
func (b *BundledReview) SetCreatedByFirstName(createdByFirstName *string) {
	b.createdByFirstName = createdByFirstName
}

// CreatedBySurname returns createdBySurname.
func (b *BundledReview) CreatedBySurname() *string {
	return b.createdBySurname
}

// SetCreatedBySurname sets the createdBySurname.
func (b *BundledReview) SetCreatedBySurname(createdBySurname *string) {
	b.createdBySurname = createdBySurname
}

// UpdatedByFirstName returns updatedByFirstName.
func (b *BundledReview) UpdatedByFirstName() *string {
	return b.updatedByFirstName
}

// SetUpdatedByFirstName sets the updatedByFirstName.
func (b *BundledReview) SetUpdatedByFirstName(updatedByFirstName *string) {
	b.updatedByFirstName = updatedByFirstName
}

// UpdatedBySurname returns updatedBySurname.
func (b *BundledReview) UpdatedBySurname() *string {
	return b.updatedBySurname
}

// SetUpdatedBySurname sets the updatedBySurname.
func (b *BundledReview) SetUpdatedBySurname(updatedBySurname *string) {
	b.updatedBySurname = updatedBySurname
}

// IsUpdated returns true if UpdatedByID is set.
func (b *BundledReview) IsUpdated() bool {
	return b.updatedByID != nil
}

// ReviewedByID returns reviewedByID.
func (b *BundledReview) ReviewedByID() *string {
	return b.reviewedByID
}

// SetReviewedByID sets the reviewedByID.
func (b *BundledReview) SetReviewedByID(reviewedByID *string) {
	b.reviewedByID = reviewedByID
}

// ReviewedOnDate returns reviewedOnDate.
func (b *BundledReview) ReviewedOnDate() *time.Time {
	return b.reviewedOnDate
}

// SetReviewedOnDate sets the reviewedOnDate.
func (b *BundledReview) SetReviewedOnDate(reviewedOnDate *time.Time) {
	b.reviewedOnDate = reviewedOnDate
}

// ReviewNotes returns reviewNotes.
func (b *BundledReview) ReviewNotes() *string {
	return b.reviewNotes
}

// SetReviewNotes sets the reviewNotes.
func (b *BundledReview) SetReviewNotes(reviewNotes *string) {
	b.reviewNotes = reviewNotes
}

// Approved returns approved.
func (b *BundledReview) Approved() *bool {
	return b.approved
}

// SetApproved sets the approved.
func (b *BundledReview) SetApproved(approved *bool) {
	b.approved = approved
}

// Rating returns rating.
func (b *BundledReview) Rating() float32 {
	return b.rating
}

// SetRating sets the rating.
func (b *BundledReview) SetRating(rating float32) {
	b.rating = rating
}

// Title returns title.
func (b *BundledReview) Title() string {
	return b.title
}

// SetTitle sets the title.
func (b *BundledReview) SetTitle(title string) {
	b.title = title
}

// Description returns description.
func (b *BundledReview) Description() string {
	return b.description
}

// SetDescription sets the description.
func (b *BundledReview) SetDescription(description string) {
	b.description = description
}

// BundledID returns bundledID.
func (b *BundledReview) BundledID() string {
	return b.bundledID
}

// SetBundledID sets the bundledID.
func (b *BundledReview) SetBundledID(bundledID string) {
	b.bundledID = bundledID
}

func newBundledReview() *BundledReview {
	return &BundledReview{}
}

// New returns a new instance of BundledReviewEntity.
func NewBundledReviewEntity() BundledReviewEntity {
	return newBundledReview()
}
