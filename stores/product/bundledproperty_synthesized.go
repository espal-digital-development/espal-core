// Code generated by espal-store-synthesizer. DO NOT EDIT.
package product

import (
	"time"

	"github.com/espal-digital-development/espal-core/database"
)

var _ BundledPropertyEntity = &BundledProperty{}

type BundledPropertyEntity interface {
	database.Model
	Sorting() uint
	SetSorting(sorting uint)
	Key() *string
	SetKey(key *string)
	BundledProductID() string
	SetBundledProductID(bundledProductID string)
	PropertyID() string
	SetPropertyID(propertyID string)
}

// ID returns id.
func (bundledProperty *BundledProperty) ID() string {
	return bundledProperty.id
}

// CreatedByID returns createdByID.
func (bundledProperty *BundledProperty) CreatedByID() string {
	return bundledProperty.createdByID
}

// SetCreatedByID sets the createdByID.
func (bundledProperty *BundledProperty) SetCreatedByID(createdByID string) {
	bundledProperty.createdByID = createdByID
}

// UpdatedByID returns updatedByID.
func (bundledProperty *BundledProperty) UpdatedByID() *string {
	return bundledProperty.updatedByID
}

// SetUpdatedByID sets the updatedByID.
func (bundledProperty *BundledProperty) SetUpdatedByID(updatedByID *string) {
	bundledProperty.updatedByID = updatedByID
}

// CreatedAt returns createdAt.
func (bundledProperty *BundledProperty) CreatedAt() time.Time {
	return bundledProperty.createdAt
}

// SetCreatedAt sets the createdAt.
func (bundledProperty *BundledProperty) SetCreatedAt(createdAt time.Time) {
	bundledProperty.createdAt = createdAt
}

// UpdatedAt returns updatedAt.
func (bundledProperty *BundledProperty) UpdatedAt() *time.Time {
	return bundledProperty.updatedAt
}

// SetUpdatedAt sets the updatedAt.
func (bundledProperty *BundledProperty) SetUpdatedAt(updatedAt *time.Time) {
	bundledProperty.updatedAt = updatedAt
}

// CreatedByFirstName returns createdByFirstName.
func (bundledProperty *BundledProperty) CreatedByFirstName() *string {
	return bundledProperty.createdByFirstName
}

// SetCreatedByFirstName sets the createdByFirstName.
func (bundledProperty *BundledProperty) SetCreatedByFirstName(createdByFirstName *string) {
	bundledProperty.createdByFirstName = createdByFirstName
}

// CreatedBySurname returns createdBySurname.
func (bundledProperty *BundledProperty) CreatedBySurname() *string {
	return bundledProperty.createdBySurname
}

// SetCreatedBySurname sets the createdBySurname.
func (bundledProperty *BundledProperty) SetCreatedBySurname(createdBySurname *string) {
	bundledProperty.createdBySurname = createdBySurname
}

// UpdatedByFirstName returns updatedByFirstName.
func (bundledProperty *BundledProperty) UpdatedByFirstName() *string {
	return bundledProperty.updatedByFirstName
}

// SetUpdatedByFirstName sets the updatedByFirstName.
func (bundledProperty *BundledProperty) SetUpdatedByFirstName(updatedByFirstName *string) {
	bundledProperty.updatedByFirstName = updatedByFirstName
}

// UpdatedBySurname returns updatedBySurname.
func (bundledProperty *BundledProperty) UpdatedBySurname() *string {
	return bundledProperty.updatedBySurname
}

// SetUpdatedBySurname sets the updatedBySurname.
func (bundledProperty *BundledProperty) SetUpdatedBySurname(updatedBySurname *string) {
	bundledProperty.updatedBySurname = updatedBySurname
}

// IsUpdated returns true if UpdatedByID is set.
func (bundledProperty *BundledProperty) IsUpdated() bool {
	return bundledProperty.updatedByID != nil
}

// Sorting returns sorting.
func (bundledProperty *BundledProperty) Sorting() uint {
	return bundledProperty.sorting
}

// SetSorting sets the sorting.
func (bundledProperty *BundledProperty) SetSorting(sorting uint) {
	bundledProperty.sorting = sorting
}

// Key returns key.
func (bundledProperty *BundledProperty) Key() *string {
	return bundledProperty.key
}

// SetKey sets the key.
func (bundledProperty *BundledProperty) SetKey(key *string) {
	bundledProperty.key = key
}

// BundledProductID returns bundledProductID.
func (bundledProperty *BundledProperty) BundledProductID() string {
	return bundledProperty.bundledProductID
}

// SetBundledProductID sets the bundledProductID.
func (bundledProperty *BundledProperty) SetBundledProductID(bundledProductID string) {
	bundledProperty.bundledProductID = bundledProductID
}

// PropertyID returns propertyID.
func (bundledProperty *BundledProperty) PropertyID() string {
	return bundledProperty.propertyID
}

// SetPropertyID sets the propertyID.
func (bundledProperty *BundledProperty) SetPropertyID(propertyID string) {
	bundledProperty.propertyID = propertyID
}

func newBundledProperty() *BundledProperty {
	return &BundledProperty{}
}

// New returns a new instance of BundledPropertyEntity.
func NewBundledPropertyEntity() BundledPropertyEntity {
	return newBundledProperty()
}
