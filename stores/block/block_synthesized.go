// Code generated by espal-store-synthesizer. DO NOT EDIT.
package block

import (
	"time"

	"github.com/espal-digital-development/espal-core/database"
)

var _ BlockEntity = &Block{}

type BlockEntity interface {
	database.Model
	DomainID() string
	SetDomainID(domainID string)
	Active() bool
	SetActive(active bool)
}

// TableName returns the table name that belongs to the current model.
func (b *Block) TableName() string {
	return "Block"
}

// TableAlias returns the unique resolved table alias for use in queries.
func (b *Block) TableAlias() string {
	return "be"
}

// ID returns id.
func (b *Block) ID() string {
	return b.id
}

// CreatedByID returns createdByID.
func (b *Block) CreatedByID() string {
	return b.createdByID
}

// SetCreatedByID sets the createdByID.
func (b *Block) SetCreatedByID(createdByID string) {
	b.createdByID = createdByID
}

// UpdatedByID returns updatedByID.
func (b *Block) UpdatedByID() *string {
	return b.updatedByID
}

// SetUpdatedByID sets the updatedByID.
func (b *Block) SetUpdatedByID(updatedByID *string) {
	b.updatedByID = updatedByID
}

// CreatedAt returns createdAt.
func (b *Block) CreatedAt() time.Time {
	return b.createdAt
}

// SetCreatedAt sets the createdAt.
func (b *Block) SetCreatedAt(createdAt time.Time) {
	b.createdAt = createdAt
}

// UpdatedAt returns updatedAt.
func (b *Block) UpdatedAt() *time.Time {
	return b.updatedAt
}

// SetUpdatedAt sets the updatedAt.
func (b *Block) SetUpdatedAt(updatedAt *time.Time) {
	b.updatedAt = updatedAt
}

// CreatedByFirstName returns createdByFirstName.
func (b *Block) CreatedByFirstName() *string {
	return b.createdByFirstName
}

// SetCreatedByFirstName sets the createdByFirstName.
func (b *Block) SetCreatedByFirstName(createdByFirstName *string) {
	b.createdByFirstName = createdByFirstName
}

// CreatedBySurname returns createdBySurname.
func (b *Block) CreatedBySurname() *string {
	return b.createdBySurname
}

// SetCreatedBySurname sets the createdBySurname.
func (b *Block) SetCreatedBySurname(createdBySurname *string) {
	b.createdBySurname = createdBySurname
}

// UpdatedByFirstName returns updatedByFirstName.
func (b *Block) UpdatedByFirstName() *string {
	return b.updatedByFirstName
}

// SetUpdatedByFirstName sets the updatedByFirstName.
func (b *Block) SetUpdatedByFirstName(updatedByFirstName *string) {
	b.updatedByFirstName = updatedByFirstName
}

// UpdatedBySurname returns updatedBySurname.
func (b *Block) UpdatedBySurname() *string {
	return b.updatedBySurname
}

// SetUpdatedBySurname sets the updatedBySurname.
func (b *Block) SetUpdatedBySurname(updatedBySurname *string) {
	b.updatedBySurname = updatedBySurname
}

// IsUpdated returns true if UpdatedByID is set.
func (b *Block) IsUpdated() bool {
	return b.updatedByID != nil
}

// DomainID returns domainID.
func (b *Block) DomainID() string {
	return b.domainID
}

// SetDomainID sets the domainID.
func (b *Block) SetDomainID(domainID string) {
	b.domainID = domainID
}

// Active returns active.
func (b *Block) Active() bool {
	return b.active
}

// SetActive sets the active.
func (b *Block) SetActive(active bool) {
	b.active = active
}

func newBlock() *Block {
	return &Block{}
}

// New returns a new instance of BlockEntity.
func NewBlockEntity() BlockEntity {
	return newBlock()
}
