// Code generated by espal-store-synthesizer. DO NOT EDIT.
package block_test

import (
	"testing"
	"time"

	"github.com/espal-digital-development/espal-core/stores/block"
)

func TestBlockTable(t *testing.T) {
	b := block.NewBlockEntity()
	if b.TableName() == "" {
		t.Fatal("TableName shouldn't be empty")
	}
}

func TestBlockTableAlias(t *testing.T) {
	b := block.NewBlockEntity()
	if b.TableName() == "" {
		t.Fatal("TableAlias shouldn't be empty")
	}
}

func TestBlockIsUpdated(t *testing.T) {
	b := block.NewBlockEntity()
	b.IsUpdated()
}

func TestBlockID(t *testing.T) {
	b := block.NewBlockEntity()
	b.ID()
}

func TestBlockCreatedByID(t *testing.T) {
	b := block.NewBlockEntity()
	testValue := "testValue"
	b.SetCreatedByID(testValue)
	if testValue != b.CreatedByID() {
		t.Fatal("Getter did not return the Set value")
	}
}

func TestBlockUpdatedByID(t *testing.T) {
	b := block.NewBlockEntity()
	testValue := "testValue"
	b.SetUpdatedByID(&testValue)
	if &testValue != b.UpdatedByID() {
		t.Fatal("Getter did not return the Set value")
	}
}

func TestBlockCreatedAt(t *testing.T) {
	b := block.NewBlockEntity()
	testValue := time.Now()
	b.SetCreatedAt(testValue)
	if testValue != b.CreatedAt() {
		t.Fatal("Getter did not return the Set value")
	}
}

func TestBlockUpdatedAt(t *testing.T) {
	b := block.NewBlockEntity()
	testValue := time.Now()
	b.SetUpdatedAt(&testValue)
	if &testValue != b.UpdatedAt() {
		t.Fatal("Getter did not return the Set value")
	}
}

func TestBlockCreatedByFirstName(t *testing.T) {
	b := block.NewBlockEntity()
	testValue := "testValue"
	b.SetCreatedByFirstName(&testValue)
	if &testValue != b.CreatedByFirstName() {
		t.Fatal("Getter did not return the Set value")
	}
}

func TestBlockCreatedBySurname(t *testing.T) {
	b := block.NewBlockEntity()
	testValue := "testValue"
	b.SetCreatedBySurname(&testValue)
	if &testValue != b.CreatedBySurname() {
		t.Fatal("Getter did not return the Set value")
	}
}

func TestBlockUpdatedByFirstName(t *testing.T) {
	b := block.NewBlockEntity()
	testValue := "testValue"
	b.SetUpdatedByFirstName(&testValue)
	if &testValue != b.UpdatedByFirstName() {
		t.Fatal("Getter did not return the Set value")
	}
}

func TestBlockUpdatedBySurname(t *testing.T) {
	b := block.NewBlockEntity()
	testValue := "testValue"
	b.SetUpdatedBySurname(&testValue)
	if &testValue != b.UpdatedBySurname() {
		t.Fatal("Getter did not return the Set value")
	}
}

func TestBlockDomainID(t *testing.T) {
	b := block.NewBlockEntity()
	testValue := "testValue"
	b.SetDomainID(testValue)
	if testValue != b.DomainID() {
		t.Fatal("Getter did not return the Set value")
	}
}

func TestBlockActive(t *testing.T) {
	b := block.NewBlockEntity()
	testValue := true
	b.SetActive(testValue)
	if testValue != b.Active() {
		t.Fatal("Getter did not return the Set value")
	}
}
