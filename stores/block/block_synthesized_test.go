// Code generated by espal-store-synthesizer. DO NOT EDIT.
package block_test

import (
	"testing"
	"time"

	"github.com/espal-digital-development/espal-core/stores/block"
)

func TestBlockTable(t *testing.T) {
	block := block.NewBlockEntity()
	if block.TableName() == "" {
		t.Fatal("TableName shouldn't be empty")
	}
}

func TestBlockTableAlias(t *testing.T) {
	block := block.NewBlockEntity()
	if block.TableName() == "" {
		t.Fatal("TableAlias shouldn't be empty")
	}
}

func TestBlockIsUpdated(t *testing.T) {
	block := block.NewBlockEntity()
	block.IsUpdated()
}

func TestBlockID(t *testing.T) {
	block := block.NewBlockEntity()
	block.ID()
}

func TestBlockCreatedByID(t *testing.T) {
	block := block.NewBlockEntity()
	testValue := "testValue"
	block.SetCreatedByID(testValue)
	if testValue != block.CreatedByID() {
		t.Fatal("Getter did not return the Set value")
	}
}

func TestBlockUpdatedByID(t *testing.T) {
	block := block.NewBlockEntity()
	testValue := "testValue"
	block.SetUpdatedByID(&testValue)
	if &testValue != block.UpdatedByID() {
		t.Fatal("Getter did not return the Set value")
	}
}

func TestBlockCreatedAt(t *testing.T) {
	block := block.NewBlockEntity()
	testValue := time.Now()
	block.SetCreatedAt(testValue)
	if testValue != block.CreatedAt() {
		t.Fatal("Getter did not return the Set value")
	}
}

func TestBlockUpdatedAt(t *testing.T) {
	block := block.NewBlockEntity()
	testValue := time.Now()
	block.SetUpdatedAt(&testValue)
	if &testValue != block.UpdatedAt() {
		t.Fatal("Getter did not return the Set value")
	}
}

func TestBlockCreatedByFirstName(t *testing.T) {
	block := block.NewBlockEntity()
	testValue := "testValue"
	block.SetCreatedByFirstName(&testValue)
	if &testValue != block.CreatedByFirstName() {
		t.Fatal("Getter did not return the Set value")
	}
}

func TestBlockCreatedBySurname(t *testing.T) {
	block := block.NewBlockEntity()
	testValue := "testValue"
	block.SetCreatedBySurname(&testValue)
	if &testValue != block.CreatedBySurname() {
		t.Fatal("Getter did not return the Set value")
	}
}

func TestBlockUpdatedByFirstName(t *testing.T) {
	block := block.NewBlockEntity()
	testValue := "testValue"
	block.SetUpdatedByFirstName(&testValue)
	if &testValue != block.UpdatedByFirstName() {
		t.Fatal("Getter did not return the Set value")
	}
}

func TestBlockUpdatedBySurname(t *testing.T) {
	block := block.NewBlockEntity()
	testValue := "testValue"
	block.SetUpdatedBySurname(&testValue)
	if &testValue != block.UpdatedBySurname() {
		t.Fatal("Getter did not return the Set value")
	}
}

func TestBlockDomainID(t *testing.T) {
	block := block.NewBlockEntity()
	testValue := "testValue"
	block.SetDomainID(testValue)
	if testValue != block.DomainID() {
		t.Fatal("Getter did not return the Set value")
	}
}

func TestBlockActive(t *testing.T) {
	block := block.NewBlockEntity()
	testValue := true
	block.SetActive(testValue)
	if testValue != block.Active() {
		t.Fatal("Getter did not return the Set value")
	}
}
