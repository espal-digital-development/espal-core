// Code generated by espal-store-synthesizer. DO NOT EDIT.
package download

import (
	"time"

	"github.com/espal-digital-development/espal-core/database"
)

var _ DownloadEntity = &Download{}

type DownloadEntity interface {
	database.Model
	Active() bool
	SetActive(active bool)
	FilePath() string
	SetFilePath(filePath string)
}

// TableName returns the table name that belongs to the current model.
func (download *Download) TableName() string {
	return "Download"
}

// ID returns id.
func (download *Download) ID() string {
	return download.id
}

// CreatedByID returns createdByID.
func (download *Download) CreatedByID() string {
	return download.createdByID
}

// SetCreatedByID sets the createdByID.
func (download *Download) SetCreatedByID(createdByID string) {
	download.createdByID = createdByID
}

// UpdatedByID returns updatedByID.
func (download *Download) UpdatedByID() *string {
	return download.updatedByID
}

// SetUpdatedByID sets the updatedByID.
func (download *Download) SetUpdatedByID(updatedByID *string) {
	download.updatedByID = updatedByID
}

// CreatedAt returns createdAt.
func (download *Download) CreatedAt() time.Time {
	return download.createdAt
}

// SetCreatedAt sets the createdAt.
func (download *Download) SetCreatedAt(createdAt time.Time) {
	download.createdAt = createdAt
}

// UpdatedAt returns updatedAt.
func (download *Download) UpdatedAt() *time.Time {
	return download.updatedAt
}

// SetUpdatedAt sets the updatedAt.
func (download *Download) SetUpdatedAt(updatedAt *time.Time) {
	download.updatedAt = updatedAt
}

// CreatedByFirstName returns createdByFirstName.
func (download *Download) CreatedByFirstName() *string {
	return download.createdByFirstName
}

// SetCreatedByFirstName sets the createdByFirstName.
func (download *Download) SetCreatedByFirstName(createdByFirstName *string) {
	download.createdByFirstName = createdByFirstName
}

// CreatedBySurname returns createdBySurname.
func (download *Download) CreatedBySurname() *string {
	return download.createdBySurname
}

// SetCreatedBySurname sets the createdBySurname.
func (download *Download) SetCreatedBySurname(createdBySurname *string) {
	download.createdBySurname = createdBySurname
}

// UpdatedByFirstName returns updatedByFirstName.
func (download *Download) UpdatedByFirstName() *string {
	return download.updatedByFirstName
}

// SetUpdatedByFirstName sets the updatedByFirstName.
func (download *Download) SetUpdatedByFirstName(updatedByFirstName *string) {
	download.updatedByFirstName = updatedByFirstName
}

// UpdatedBySurname returns updatedBySurname.
func (download *Download) UpdatedBySurname() *string {
	return download.updatedBySurname
}

// SetUpdatedBySurname sets the updatedBySurname.
func (download *Download) SetUpdatedBySurname(updatedBySurname *string) {
	download.updatedBySurname = updatedBySurname
}

// IsUpdated returns true if UpdatedByID is set.
func (download *Download) IsUpdated() bool {
	return download.updatedByID != nil
}

// Active returns active.
func (download *Download) Active() bool {
	return download.active
}

// SetActive sets the active.
func (download *Download) SetActive(active bool) {
	download.active = active
}

// FilePath returns filePath.
func (download *Download) FilePath() string {
	return download.filePath
}

// SetFilePath sets the filePath.
func (download *Download) SetFilePath(filePath string) {
	download.filePath = filePath
}

func newDownload() *Download {
	return &Download{}
}

// New returns a new instance of DownloadEntity.
func NewDownloadEntity() DownloadEntity {
	return newDownload()
}
