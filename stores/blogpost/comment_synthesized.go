// Code generated by espal-store-synthesizer. DO NOT EDIT.
package blogpost

import (
	"time"

	"github.com/espal-digital-development/espal-core/database"
)

var _ CommentEntity = &Comment{}

type CommentEntity interface {
	database.Model
	BlogPostID() string
	SetBlogPostID(blogPostID string)
	Title() *string
	SetTitle(title *string)
	Message() string
	SetMessage(message string)
}

// ID returns id.
func (comment *Comment) ID() string {
	return comment.id
}

// CreatedByID returns createdByID.
func (comment *Comment) CreatedByID() string {
	return comment.createdByID
}

// SetCreatedByID sets the createdByID.
func (comment *Comment) SetCreatedByID(createdByID string) {
	comment.createdByID = createdByID
}

// UpdatedByID returns updatedByID.
func (comment *Comment) UpdatedByID() *string {
	return comment.updatedByID
}

// SetUpdatedByID sets the updatedByID.
func (comment *Comment) SetUpdatedByID(updatedByID *string) {
	comment.updatedByID = updatedByID
}

// CreatedAt returns createdAt.
func (comment *Comment) CreatedAt() time.Time {
	return comment.createdAt
}

// SetCreatedAt sets the createdAt.
func (comment *Comment) SetCreatedAt(createdAt time.Time) {
	comment.createdAt = createdAt
}

// UpdatedAt returns updatedAt.
func (comment *Comment) UpdatedAt() *time.Time {
	return comment.updatedAt
}

// SetUpdatedAt sets the updatedAt.
func (comment *Comment) SetUpdatedAt(updatedAt *time.Time) {
	comment.updatedAt = updatedAt
}

// CreatedByFirstName returns createdByFirstName.
func (comment *Comment) CreatedByFirstName() *string {
	return comment.createdByFirstName
}

// SetCreatedByFirstName sets the createdByFirstName.
func (comment *Comment) SetCreatedByFirstName(createdByFirstName *string) {
	comment.createdByFirstName = createdByFirstName
}

// CreatedBySurname returns createdBySurname.
func (comment *Comment) CreatedBySurname() *string {
	return comment.createdBySurname
}

// SetCreatedBySurname sets the createdBySurname.
func (comment *Comment) SetCreatedBySurname(createdBySurname *string) {
	comment.createdBySurname = createdBySurname
}

// UpdatedByFirstName returns updatedByFirstName.
func (comment *Comment) UpdatedByFirstName() *string {
	return comment.updatedByFirstName
}

// SetUpdatedByFirstName sets the updatedByFirstName.
func (comment *Comment) SetUpdatedByFirstName(updatedByFirstName *string) {
	comment.updatedByFirstName = updatedByFirstName
}

// UpdatedBySurname returns updatedBySurname.
func (comment *Comment) UpdatedBySurname() *string {
	return comment.updatedBySurname
}

// SetUpdatedBySurname sets the updatedBySurname.
func (comment *Comment) SetUpdatedBySurname(updatedBySurname *string) {
	comment.updatedBySurname = updatedBySurname
}

// IsUpdated returns true if UpdatedByID is set.
func (comment *Comment) IsUpdated() bool {
	return comment.updatedByID != nil
}

// BlogPostID returns blogPostID.
func (comment *Comment) BlogPostID() string {
	return comment.blogPostID
}

// SetBlogPostID sets the blogPostID.
func (comment *Comment) SetBlogPostID(blogPostID string) {
	comment.blogPostID = blogPostID
}

// Title returns title.
func (comment *Comment) Title() *string {
	return comment.title
}

// SetTitle sets the title.
func (comment *Comment) SetTitle(title *string) {
	comment.title = title
}

// Message returns message.
func (comment *Comment) Message() string {
	return comment.message
}

// SetMessage sets the message.
func (comment *Comment) SetMessage(message string) {
	comment.message = message
}

func newComment() *Comment {
	return &Comment{}
}

// New returns a new instance of CommentEntity.
func NewCommentEntity() CommentEntity {
	return newComment()
}
