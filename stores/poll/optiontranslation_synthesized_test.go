// Code generated by espal-store-synthesizer. DO NOT EDIT.
package poll_test

import (
	"testing"
	"time"

	"github.com/espal-digital-development/espal-core/stores/poll"
)

func TestOptionTranslationTable(t *testing.T) {
	optionTranslation := poll.NewOptionTranslationEntity()
	if optionTranslation.TableName() == "" {
		t.Fatal("TableName shouldn't be empty")
	}
}

func TestOptionTranslationTableAlias(t *testing.T) {
	optionTranslation := poll.NewOptionTranslationEntity()
	if optionTranslation.TableName() == "" {
		t.Fatal("TableAlias shouldn't be empty")
	}
}

func TestOptionTranslationIsUpdated(t *testing.T) {
	optionTranslation := poll.NewOptionTranslationEntity()
	optionTranslation.IsUpdated()
}

func TestOptionTranslationID(t *testing.T) {
	optionTranslation := poll.NewOptionTranslationEntity()
	optionTranslation.ID()
}

func TestOptionTranslationCreatedByID(t *testing.T) {
	optionTranslation := poll.NewOptionTranslationEntity()
	testValue := "testValue"
	optionTranslation.SetCreatedByID(testValue)
	if testValue != optionTranslation.CreatedByID() {
		t.Fatal("Getter did not return the Set value")
	}
}

func TestOptionTranslationUpdatedByID(t *testing.T) {
	optionTranslation := poll.NewOptionTranslationEntity()
	testValue := "testValue"
	optionTranslation.SetUpdatedByID(&testValue)
	if &testValue != optionTranslation.UpdatedByID() {
		t.Fatal("Getter did not return the Set value")
	}
}

func TestOptionTranslationCreatedAt(t *testing.T) {
	optionTranslation := poll.NewOptionTranslationEntity()
	testValue := time.Now()
	optionTranslation.SetCreatedAt(testValue)
	if testValue != optionTranslation.CreatedAt() {
		t.Fatal("Getter did not return the Set value")
	}
}

func TestOptionTranslationUpdatedAt(t *testing.T) {
	optionTranslation := poll.NewOptionTranslationEntity()
	testValue := time.Now()
	optionTranslation.SetUpdatedAt(&testValue)
	if &testValue != optionTranslation.UpdatedAt() {
		t.Fatal("Getter did not return the Set value")
	}
}

func TestOptionTranslationCreatedByFirstName(t *testing.T) {
	optionTranslation := poll.NewOptionTranslationEntity()
	testValue := "testValue"
	optionTranslation.SetCreatedByFirstName(&testValue)
	if &testValue != optionTranslation.CreatedByFirstName() {
		t.Fatal("Getter did not return the Set value")
	}
}

func TestOptionTranslationCreatedBySurname(t *testing.T) {
	optionTranslation := poll.NewOptionTranslationEntity()
	testValue := "testValue"
	optionTranslation.SetCreatedBySurname(&testValue)
	if &testValue != optionTranslation.CreatedBySurname() {
		t.Fatal("Getter did not return the Set value")
	}
}

func TestOptionTranslationUpdatedByFirstName(t *testing.T) {
	optionTranslation := poll.NewOptionTranslationEntity()
	testValue := "testValue"
	optionTranslation.SetUpdatedByFirstName(&testValue)
	if &testValue != optionTranslation.UpdatedByFirstName() {
		t.Fatal("Getter did not return the Set value")
	}
}

func TestOptionTranslationUpdatedBySurname(t *testing.T) {
	optionTranslation := poll.NewOptionTranslationEntity()
	testValue := "testValue"
	optionTranslation.SetUpdatedBySurname(&testValue)
	if &testValue != optionTranslation.UpdatedBySurname() {
		t.Fatal("Getter did not return the Set value")
	}
}

func TestOptionTranslationLanguage(t *testing.T) {
	optionTranslation := poll.NewOptionTranslationEntity()
	testValue := uint16(65000)
	optionTranslation.SetLanguage(testValue)
	if testValue != optionTranslation.Language() {
		t.Fatal("Getter did not return the Set value")
	}
}

func TestOptionTranslationField(t *testing.T) {
	optionTranslation := poll.NewOptionTranslationEntity()
	testValue := uint16(65000)
	optionTranslation.SetField(testValue)
	if testValue != optionTranslation.Field() {
		t.Fatal("Getter did not return the Set value")
	}
}

func TestOptionTranslationValue(t *testing.T) {
	optionTranslation := poll.NewOptionTranslationEntity()
	testValue := "testValue"
	optionTranslation.SetValue(testValue)
	if testValue != optionTranslation.Value() {
		t.Fatal("Getter did not return the Set value")
	}
}

func TestOptionTranslationOptionID(t *testing.T) {
	optionTranslation := poll.NewOptionTranslationEntity()
	testValue := "testValue"
	optionTranslation.SetOptionID(testValue)
	if testValue != optionTranslation.OptionID() {
		t.Fatal("Getter did not return the Set value")
	}
}
