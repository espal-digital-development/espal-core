// Code generated by espal-store-synthesizer. DO NOT EDIT.
package poll

import (
	"time"

	"github.com/espal-digital-development/espal-core/database"
)

var _ OptionTranslationEntity = &OptionTranslation{}

type OptionTranslationEntity interface {
	database.TranslationModel
	OptionID() string
	SetOptionID(optionID string)
}

// ID returns id.
func (o *OptionTranslation) ID() string {
	return o.id
}

// CreatedByID returns createdByID.
func (o *OptionTranslation) CreatedByID() string {
	return o.createdByID
}

// SetCreatedByID sets the createdByID.
func (o *OptionTranslation) SetCreatedByID(createdByID string) {
	o.createdByID = createdByID
}

// UpdatedByID returns updatedByID.
func (o *OptionTranslation) UpdatedByID() *string {
	return o.updatedByID
}

// SetUpdatedByID sets the updatedByID.
func (o *OptionTranslation) SetUpdatedByID(updatedByID *string) {
	o.updatedByID = updatedByID
}

// CreatedAt returns createdAt.
func (o *OptionTranslation) CreatedAt() time.Time {
	return o.createdAt
}

// SetCreatedAt sets the createdAt.
func (o *OptionTranslation) SetCreatedAt(createdAt time.Time) {
	o.createdAt = createdAt
}

// UpdatedAt returns updatedAt.
func (o *OptionTranslation) UpdatedAt() *time.Time {
	return o.updatedAt
}

// SetUpdatedAt sets the updatedAt.
func (o *OptionTranslation) SetUpdatedAt(updatedAt *time.Time) {
	o.updatedAt = updatedAt
}

// CreatedByFirstName returns createdByFirstName.
func (o *OptionTranslation) CreatedByFirstName() *string {
	return o.createdByFirstName
}

// SetCreatedByFirstName sets the createdByFirstName.
func (o *OptionTranslation) SetCreatedByFirstName(createdByFirstName *string) {
	o.createdByFirstName = createdByFirstName
}

// CreatedBySurname returns createdBySurname.
func (o *OptionTranslation) CreatedBySurname() *string {
	return o.createdBySurname
}

// SetCreatedBySurname sets the createdBySurname.
func (o *OptionTranslation) SetCreatedBySurname(createdBySurname *string) {
	o.createdBySurname = createdBySurname
}

// UpdatedByFirstName returns updatedByFirstName.
func (o *OptionTranslation) UpdatedByFirstName() *string {
	return o.updatedByFirstName
}

// SetUpdatedByFirstName sets the updatedByFirstName.
func (o *OptionTranslation) SetUpdatedByFirstName(updatedByFirstName *string) {
	o.updatedByFirstName = updatedByFirstName
}

// UpdatedBySurname returns updatedBySurname.
func (o *OptionTranslation) UpdatedBySurname() *string {
	return o.updatedBySurname
}

// SetUpdatedBySurname sets the updatedBySurname.
func (o *OptionTranslation) SetUpdatedBySurname(updatedBySurname *string) {
	o.updatedBySurname = updatedBySurname
}

// IsUpdated returns true if UpdatedByID is set.
func (o *OptionTranslation) IsUpdated() bool {
	return o.updatedByID != nil
}

// Language returns language.
func (o *OptionTranslation) Language() uint16 {
	return o.language
}

// SetLanguage sets the language.
func (o *OptionTranslation) SetLanguage(language uint16) {
	o.language = language
}

// Field returns field.
func (o *OptionTranslation) Field() uint16 {
	return o.field
}

// SetField sets the field.
func (o *OptionTranslation) SetField(field uint16) {
	o.field = field
}

// Value returns value.
func (o *OptionTranslation) Value() string {
	return o.value
}

// SetValue sets the value.
func (o *OptionTranslation) SetValue(value string) {
	o.value = value
}

// OptionID returns optionID.
func (o *OptionTranslation) OptionID() string {
	return o.optionID
}

// SetOptionID sets the optionID.
func (o *OptionTranslation) SetOptionID(optionID string) {
	o.optionID = optionID
}

func newOptionTranslation() *OptionTranslation {
	return &OptionTranslation{}
}

// New returns a new instance of OptionTranslationEntity.
func NewOptionTranslationEntity() OptionTranslationEntity {
	return newOptionTranslation()
}
