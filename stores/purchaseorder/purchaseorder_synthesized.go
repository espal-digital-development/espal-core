// Code generated by espal-store-synthesizer. DO NOT EDIT.
package purchaseorder

import (
	"time"

	"github.com/espal-digital-development/espal-core/database"
)

var _ PurchaseOrderEntity = &PurchaseOrder{}

type PurchaseOrderEntity interface {
	database.Model
	SupplierID() string
	SetSupplierID(supplierID string)
	Currency() uint16
	SetCurrency(currency uint16)
	Comments() *string
	SetComments(comments *string)
	SellingPartyAutograph() *string
	SetSellingPartyAutograph(sellingPartyAutograph *string)
	BuyingPartyAutograph() *string
	SetBuyingPartyAutograph(buyingPartyAutograph *string)
}

// TableName returns the table name that belongs to the current model.
func (purchaseOrder *PurchaseOrder) TableName() string {
	return "PurchaseOrder"
}

// ID returns id.
func (purchaseOrder *PurchaseOrder) ID() string {
	return purchaseOrder.id
}

// CreatedByID returns createdByID.
func (purchaseOrder *PurchaseOrder) CreatedByID() string {
	return purchaseOrder.createdByID
}

// SetCreatedByID sets the createdByID.
func (purchaseOrder *PurchaseOrder) SetCreatedByID(createdByID string) {
	purchaseOrder.createdByID = createdByID
}

// UpdatedByID returns updatedByID.
func (purchaseOrder *PurchaseOrder) UpdatedByID() *string {
	return purchaseOrder.updatedByID
}

// SetUpdatedByID sets the updatedByID.
func (purchaseOrder *PurchaseOrder) SetUpdatedByID(updatedByID *string) {
	purchaseOrder.updatedByID = updatedByID
}

// CreatedAt returns createdAt.
func (purchaseOrder *PurchaseOrder) CreatedAt() time.Time {
	return purchaseOrder.createdAt
}

// SetCreatedAt sets the createdAt.
func (purchaseOrder *PurchaseOrder) SetCreatedAt(createdAt time.Time) {
	purchaseOrder.createdAt = createdAt
}

// UpdatedAt returns updatedAt.
func (purchaseOrder *PurchaseOrder) UpdatedAt() *time.Time {
	return purchaseOrder.updatedAt
}

// SetUpdatedAt sets the updatedAt.
func (purchaseOrder *PurchaseOrder) SetUpdatedAt(updatedAt *time.Time) {
	purchaseOrder.updatedAt = updatedAt
}

// CreatedByFirstName returns createdByFirstName.
func (purchaseOrder *PurchaseOrder) CreatedByFirstName() *string {
	return purchaseOrder.createdByFirstName
}

// SetCreatedByFirstName sets the createdByFirstName.
func (purchaseOrder *PurchaseOrder) SetCreatedByFirstName(createdByFirstName *string) {
	purchaseOrder.createdByFirstName = createdByFirstName
}

// CreatedBySurname returns createdBySurname.
func (purchaseOrder *PurchaseOrder) CreatedBySurname() *string {
	return purchaseOrder.createdBySurname
}

// SetCreatedBySurname sets the createdBySurname.
func (purchaseOrder *PurchaseOrder) SetCreatedBySurname(createdBySurname *string) {
	purchaseOrder.createdBySurname = createdBySurname
}

// UpdatedByFirstName returns updatedByFirstName.
func (purchaseOrder *PurchaseOrder) UpdatedByFirstName() *string {
	return purchaseOrder.updatedByFirstName
}

// SetUpdatedByFirstName sets the updatedByFirstName.
func (purchaseOrder *PurchaseOrder) SetUpdatedByFirstName(updatedByFirstName *string) {
	purchaseOrder.updatedByFirstName = updatedByFirstName
}

// UpdatedBySurname returns updatedBySurname.
func (purchaseOrder *PurchaseOrder) UpdatedBySurname() *string {
	return purchaseOrder.updatedBySurname
}

// SetUpdatedBySurname sets the updatedBySurname.
func (purchaseOrder *PurchaseOrder) SetUpdatedBySurname(updatedBySurname *string) {
	purchaseOrder.updatedBySurname = updatedBySurname
}

// IsUpdated returns true if UpdatedByID is set.
func (purchaseOrder *PurchaseOrder) IsUpdated() bool {
	return purchaseOrder.updatedByID != nil
}

// SupplierID returns supplierID.
func (purchaseOrder *PurchaseOrder) SupplierID() string {
	return purchaseOrder.supplierID
}

// SetSupplierID sets the supplierID.
func (purchaseOrder *PurchaseOrder) SetSupplierID(supplierID string) {
	purchaseOrder.supplierID = supplierID
}

// Currency returns currency.
func (purchaseOrder *PurchaseOrder) Currency() uint16 {
	return purchaseOrder.currency
}

// SetCurrency sets the currency.
func (purchaseOrder *PurchaseOrder) SetCurrency(currency uint16) {
	purchaseOrder.currency = currency
}

// Comments returns comments.
func (purchaseOrder *PurchaseOrder) Comments() *string {
	return purchaseOrder.comments
}

// SetComments sets the comments.
func (purchaseOrder *PurchaseOrder) SetComments(comments *string) {
	purchaseOrder.comments = comments
}

// SellingPartyAutograph returns sellingPartyAutograph.
func (purchaseOrder *PurchaseOrder) SellingPartyAutograph() *string {
	return purchaseOrder.sellingPartyAutograph
}

// SetSellingPartyAutograph sets the sellingPartyAutograph.
func (purchaseOrder *PurchaseOrder) SetSellingPartyAutograph(sellingPartyAutograph *string) {
	purchaseOrder.sellingPartyAutograph = sellingPartyAutograph
}

// BuyingPartyAutograph returns buyingPartyAutograph.
func (purchaseOrder *PurchaseOrder) BuyingPartyAutograph() *string {
	return purchaseOrder.buyingPartyAutograph
}

// SetBuyingPartyAutograph sets the buyingPartyAutograph.
func (purchaseOrder *PurchaseOrder) SetBuyingPartyAutograph(buyingPartyAutograph *string) {
	purchaseOrder.buyingPartyAutograph = buyingPartyAutograph
}

func newPurchaseOrder() *PurchaseOrder {
	return &PurchaseOrder{}
}

// New returns a new instance of PurchaseOrderEntity.
func NewPurchaseOrderEntity() PurchaseOrderEntity {
	return newPurchaseOrder()
}
