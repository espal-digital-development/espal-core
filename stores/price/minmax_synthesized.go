// Code generated by espal-store-synthesizer. DO NOT EDIT.
package price

import (
	"time"

	"github.com/espal-digital-development/espal-core/database"
)

var _ MinMaxEntity = &MinMax{}

type MinMaxEntity interface {
	database.Model
	BundledProductID() *string
	SetBundledProductID(bundledProductID *string)
	ProductModelID() *string
	SetProductModelID(productModelID *string)
	ProductVariantID() *string
	SetProductVariantID(productVariantID *string)
	DomainID() string
	SetDomainID(domainID string)
	PriceGroupID() string
	SetPriceGroupID(priceGroupID string)
	TaxGroup() uint
	SetTaxGroup(taxGroup uint)
	Currency() uint16
	SetCurrency(currency uint16)
	Lowest() float64
	SetLowest(lowest float64)
	Highest() float64
	SetHighest(highest float64)
	LowestRev() float64
	SetLowestRev(lowestRev float64)
	HighestRev() float64
	SetHighestRev(highestRev float64)
}

// ID returns id.
func (minMax *MinMax) ID() string {
	return minMax.id
}

// CreatedByID returns createdByID.
func (minMax *MinMax) CreatedByID() string {
	return minMax.createdByID
}

// SetCreatedByID sets the createdByID.
func (minMax *MinMax) SetCreatedByID(createdByID string) {
	minMax.createdByID = createdByID
}

// UpdatedByID returns updatedByID.
func (minMax *MinMax) UpdatedByID() *string {
	return minMax.updatedByID
}

// SetUpdatedByID sets the updatedByID.
func (minMax *MinMax) SetUpdatedByID(updatedByID *string) {
	minMax.updatedByID = updatedByID
}

// CreatedAt returns createdAt.
func (minMax *MinMax) CreatedAt() time.Time {
	return minMax.createdAt
}

// SetCreatedAt sets the createdAt.
func (minMax *MinMax) SetCreatedAt(createdAt time.Time) {
	minMax.createdAt = createdAt
}

// UpdatedAt returns updatedAt.
func (minMax *MinMax) UpdatedAt() *time.Time {
	return minMax.updatedAt
}

// SetUpdatedAt sets the updatedAt.
func (minMax *MinMax) SetUpdatedAt(updatedAt *time.Time) {
	minMax.updatedAt = updatedAt
}

// CreatedByFirstName returns createdByFirstName.
func (minMax *MinMax) CreatedByFirstName() *string {
	return minMax.createdByFirstName
}

// SetCreatedByFirstName sets the createdByFirstName.
func (minMax *MinMax) SetCreatedByFirstName(createdByFirstName *string) {
	minMax.createdByFirstName = createdByFirstName
}

// CreatedBySurname returns createdBySurname.
func (minMax *MinMax) CreatedBySurname() *string {
	return minMax.createdBySurname
}

// SetCreatedBySurname sets the createdBySurname.
func (minMax *MinMax) SetCreatedBySurname(createdBySurname *string) {
	minMax.createdBySurname = createdBySurname
}

// UpdatedByFirstName returns updatedByFirstName.
func (minMax *MinMax) UpdatedByFirstName() *string {
	return minMax.updatedByFirstName
}

// SetUpdatedByFirstName sets the updatedByFirstName.
func (minMax *MinMax) SetUpdatedByFirstName(updatedByFirstName *string) {
	minMax.updatedByFirstName = updatedByFirstName
}

// UpdatedBySurname returns updatedBySurname.
func (minMax *MinMax) UpdatedBySurname() *string {
	return minMax.updatedBySurname
}

// SetUpdatedBySurname sets the updatedBySurname.
func (minMax *MinMax) SetUpdatedBySurname(updatedBySurname *string) {
	minMax.updatedBySurname = updatedBySurname
}

// IsUpdated returns true if UpdatedByID is set.
func (minMax *MinMax) IsUpdated() bool {
	return minMax.updatedByID != nil
}

// BundledProductID returns bundledProductID.
func (minMax *MinMax) BundledProductID() *string {
	return minMax.bundledProductID
}

// SetBundledProductID sets the bundledProductID.
func (minMax *MinMax) SetBundledProductID(bundledProductID *string) {
	minMax.bundledProductID = bundledProductID
}

// ProductModelID returns productModelID.
func (minMax *MinMax) ProductModelID() *string {
	return minMax.productModelID
}

// SetProductModelID sets the productModelID.
func (minMax *MinMax) SetProductModelID(productModelID *string) {
	minMax.productModelID = productModelID
}

// ProductVariantID returns productVariantID.
func (minMax *MinMax) ProductVariantID() *string {
	return minMax.productVariantID
}

// SetProductVariantID sets the productVariantID.
func (minMax *MinMax) SetProductVariantID(productVariantID *string) {
	minMax.productVariantID = productVariantID
}

// DomainID returns domainID.
func (minMax *MinMax) DomainID() string {
	return minMax.domainID
}

// SetDomainID sets the domainID.
func (minMax *MinMax) SetDomainID(domainID string) {
	minMax.domainID = domainID
}

// PriceGroupID returns priceGroupID.
func (minMax *MinMax) PriceGroupID() string {
	return minMax.priceGroupID
}

// SetPriceGroupID sets the priceGroupID.
func (minMax *MinMax) SetPriceGroupID(priceGroupID string) {
	minMax.priceGroupID = priceGroupID
}

// TaxGroup returns taxGroup.
func (minMax *MinMax) TaxGroup() uint {
	return minMax.taxGroup
}

// SetTaxGroup sets the taxGroup.
func (minMax *MinMax) SetTaxGroup(taxGroup uint) {
	minMax.taxGroup = taxGroup
}

// Currency returns currency.
func (minMax *MinMax) Currency() uint16 {
	return minMax.currency
}

// SetCurrency sets the currency.
func (minMax *MinMax) SetCurrency(currency uint16) {
	minMax.currency = currency
}

// Lowest returns lowest.
func (minMax *MinMax) Lowest() float64 {
	return minMax.lowest
}

// SetLowest sets the lowest.
func (minMax *MinMax) SetLowest(lowest float64) {
	minMax.lowest = lowest
}

// Highest returns highest.
func (minMax *MinMax) Highest() float64 {
	return minMax.highest
}

// SetHighest sets the highest.
func (minMax *MinMax) SetHighest(highest float64) {
	minMax.highest = highest
}

// LowestRev returns lowestRev.
func (minMax *MinMax) LowestRev() float64 {
	return minMax.lowestRev
}

// SetLowestRev sets the lowestRev.
func (minMax *MinMax) SetLowestRev(lowestRev float64) {
	minMax.lowestRev = lowestRev
}

// HighestRev returns highestRev.
func (minMax *MinMax) HighestRev() float64 {
	return minMax.highestRev
}

// SetHighestRev sets the highestRev.
func (minMax *MinMax) SetHighestRev(highestRev float64) {
	minMax.highestRev = highestRev
}

func newMinMax() *MinMax {
	return &MinMax{}
}

// New returns a new instance of MinMaxEntity.
func NewMinMaxEntity() MinMaxEntity {
	return newMinMax()
}
