// Code generated by espal-store-synthesizer. DO NOT EDIT.
package price

import (
	"time"

	"github.com/espal-digital-development/espal-core/database"
)

var _ MutationEntity = &Mutation{}

type MutationEntity interface {
	database.Model
	ProductVariantID() string
	SetProductVariantID(productVariantID string)
	Price() float64
	SetPrice(price float64)
}

// ID returns id.
func (mutation *Mutation) ID() string {
	return mutation.id
}

// CreatedByID returns createdByID.
func (mutation *Mutation) CreatedByID() string {
	return mutation.createdByID
}

// SetCreatedByID sets the createdByID.
func (mutation *Mutation) SetCreatedByID(createdByID string) {
	mutation.createdByID = createdByID
}

// UpdatedByID returns updatedByID.
func (mutation *Mutation) UpdatedByID() *string {
	return mutation.updatedByID
}

// SetUpdatedByID sets the updatedByID.
func (mutation *Mutation) SetUpdatedByID(updatedByID *string) {
	mutation.updatedByID = updatedByID
}

// CreatedAt returns createdAt.
func (mutation *Mutation) CreatedAt() time.Time {
	return mutation.createdAt
}

// SetCreatedAt sets the createdAt.
func (mutation *Mutation) SetCreatedAt(createdAt time.Time) {
	mutation.createdAt = createdAt
}

// UpdatedAt returns updatedAt.
func (mutation *Mutation) UpdatedAt() *time.Time {
	return mutation.updatedAt
}

// SetUpdatedAt sets the updatedAt.
func (mutation *Mutation) SetUpdatedAt(updatedAt *time.Time) {
	mutation.updatedAt = updatedAt
}

// CreatedByFirstName returns createdByFirstName.
func (mutation *Mutation) CreatedByFirstName() *string {
	return mutation.createdByFirstName
}

// SetCreatedByFirstName sets the createdByFirstName.
func (mutation *Mutation) SetCreatedByFirstName(createdByFirstName *string) {
	mutation.createdByFirstName = createdByFirstName
}

// CreatedBySurname returns createdBySurname.
func (mutation *Mutation) CreatedBySurname() *string {
	return mutation.createdBySurname
}

// SetCreatedBySurname sets the createdBySurname.
func (mutation *Mutation) SetCreatedBySurname(createdBySurname *string) {
	mutation.createdBySurname = createdBySurname
}

// UpdatedByFirstName returns updatedByFirstName.
func (mutation *Mutation) UpdatedByFirstName() *string {
	return mutation.updatedByFirstName
}

// SetUpdatedByFirstName sets the updatedByFirstName.
func (mutation *Mutation) SetUpdatedByFirstName(updatedByFirstName *string) {
	mutation.updatedByFirstName = updatedByFirstName
}

// UpdatedBySurname returns updatedBySurname.
func (mutation *Mutation) UpdatedBySurname() *string {
	return mutation.updatedBySurname
}

// SetUpdatedBySurname sets the updatedBySurname.
func (mutation *Mutation) SetUpdatedBySurname(updatedBySurname *string) {
	mutation.updatedBySurname = updatedBySurname
}

// IsUpdated returns true if UpdatedByID is set.
func (mutation *Mutation) IsUpdated() bool {
	return mutation.updatedByID != nil
}

// ProductVariantID returns productVariantID.
func (mutation *Mutation) ProductVariantID() string {
	return mutation.productVariantID
}

// SetProductVariantID sets the productVariantID.
func (mutation *Mutation) SetProductVariantID(productVariantID string) {
	mutation.productVariantID = productVariantID
}

// Price returns price.
func (mutation *Mutation) Price() float64 {
	return mutation.price
}

// SetPrice sets the price.
func (mutation *Mutation) SetPrice(price float64) {
	mutation.price = price
}

func newMutation() *Mutation {
	return &Mutation{}
}

// New returns a new instance of MutationEntity.
func NewMutationEntity() MutationEntity {
	return newMutation()
}
