// Code generated by espal-store-synthesizer. DO NOT EDIT.
package domain

import (
	"time"

	"github.com/espal-digital-development/espal-core/database"
)

var _ DomainEntity = &Domain{}

type DomainEntity interface {
	database.Model
	SiteID() string
	SetSiteID(siteID string)
	Active() bool
	SetActive(active bool)
	Host() string
	SetHost(host string)
	Language() *uint16
	SetLanguage(language *uint16)
	Currencies() string
	SetCurrencies(currencies string)
	LocalizedName() *string
	SetLocalizedName(localizedName *string)
	CurrenciesCount() uint
	HostWithProtocol() string
	HostWithProtocolAndWWW() string
}

// TableName returns the table name that belongs to the current model.
func (domain *Domain) TableName() string {
	return "Domain"
}

// TableAlias returns the unique resolved table alias for use in queries.
func (domain *Domain) TableAlias() string {
	return "de"
}

// ID returns id.
func (domain *Domain) ID() string {
	return domain.id
}

// CreatedByID returns createdByID.
func (domain *Domain) CreatedByID() string {
	return domain.createdByID
}

// SetCreatedByID sets the createdByID.
func (domain *Domain) SetCreatedByID(createdByID string) {
	domain.createdByID = createdByID
}

// UpdatedByID returns updatedByID.
func (domain *Domain) UpdatedByID() *string {
	return domain.updatedByID
}

// SetUpdatedByID sets the updatedByID.
func (domain *Domain) SetUpdatedByID(updatedByID *string) {
	domain.updatedByID = updatedByID
}

// SiteID returns siteID.
func (domain *Domain) SiteID() string {
	return domain.siteID
}

// SetSiteID sets the siteID.
func (domain *Domain) SetSiteID(siteID string) {
	domain.siteID = siteID
}

// CreatedAt returns createdAt.
func (domain *Domain) CreatedAt() time.Time {
	return domain.createdAt
}

// SetCreatedAt sets the createdAt.
func (domain *Domain) SetCreatedAt(createdAt time.Time) {
	domain.createdAt = createdAt
}

// UpdatedAt returns updatedAt.
func (domain *Domain) UpdatedAt() *time.Time {
	return domain.updatedAt
}

// SetUpdatedAt sets the updatedAt.
func (domain *Domain) SetUpdatedAt(updatedAt *time.Time) {
	domain.updatedAt = updatedAt
}

// CreatedByFirstName returns createdByFirstName.
func (domain *Domain) CreatedByFirstName() *string {
	return domain.createdByFirstName
}

// SetCreatedByFirstName sets the createdByFirstName.
func (domain *Domain) SetCreatedByFirstName(createdByFirstName *string) {
	domain.createdByFirstName = createdByFirstName
}

// CreatedBySurname returns createdBySurname.
func (domain *Domain) CreatedBySurname() *string {
	return domain.createdBySurname
}

// SetCreatedBySurname sets the createdBySurname.
func (domain *Domain) SetCreatedBySurname(createdBySurname *string) {
	domain.createdBySurname = createdBySurname
}

// UpdatedByFirstName returns updatedByFirstName.
func (domain *Domain) UpdatedByFirstName() *string {
	return domain.updatedByFirstName
}

// SetUpdatedByFirstName sets the updatedByFirstName.
func (domain *Domain) SetUpdatedByFirstName(updatedByFirstName *string) {
	domain.updatedByFirstName = updatedByFirstName
}

// UpdatedBySurname returns updatedBySurname.
func (domain *Domain) UpdatedBySurname() *string {
	return domain.updatedBySurname
}

// SetUpdatedBySurname sets the updatedBySurname.
func (domain *Domain) SetUpdatedBySurname(updatedBySurname *string) {
	domain.updatedBySurname = updatedBySurname
}

// IsUpdated returns true if UpdatedByID is set.
func (domain *Domain) IsUpdated() bool {
	return domain.updatedByID != nil
}

// Active returns active.
func (domain *Domain) Active() bool {
	return domain.active
}

// SetActive sets the active.
func (domain *Domain) SetActive(active bool) {
	domain.active = active
}

// Host returns host.
func (domain *Domain) Host() string {
	return domain.host
}

// SetHost sets the host.
func (domain *Domain) SetHost(host string) {
	domain.host = host
}

// Language returns language.
func (domain *Domain) Language() *uint16 {
	return domain.language
}

// SetLanguage sets the language.
func (domain *Domain) SetLanguage(language *uint16) {
	domain.language = language
}

// Currencies returns currencies.
func (domain *Domain) Currencies() string {
	return domain.currencies
}

// SetCurrencies sets the currencies.
func (domain *Domain) SetCurrencies(currencies string) {
	domain.currencies = currencies
}

// LocalizedName returns localizedName.
func (domain *Domain) LocalizedName() *string {
	return domain.localizedName
}

// SetLocalizedName sets the localizedName.
func (domain *Domain) SetLocalizedName(localizedName *string) {
	domain.localizedName = localizedName
}

func newDomain() *Domain {
	return &Domain{}
}

// New returns a new instance of DomainEntity.
func NewDomainEntity() DomainEntity {
	return newDomain()
}
