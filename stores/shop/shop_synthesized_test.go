// Code generated by espal-store-synthesizer. DO NOT EDIT.
package shop_test

import (
	"testing"
	"time"

	"github.com/espal-digital-development/espal-core/stores/shop"
)

func TestShopTable(t *testing.T) {
	shop := shop.NewShopEntity()
	if shop.TableName() == "" {
		t.Fatal("TableName shouldn't be empty")
	}
}

func TestShopTableAlias(t *testing.T) {
	shop := shop.NewShopEntity()
	if shop.TableName() == "" {
		t.Fatal("TableAlias shouldn't be empty")
	}
}

func TestShopIsUpdated(t *testing.T) {
	shop := shop.NewShopEntity()
	shop.IsUpdated()
}

func TestShopID(t *testing.T) {
	shop := shop.NewShopEntity()
	shop.ID()
}

func TestShopCreatedByID(t *testing.T) {
	shop := shop.NewShopEntity()
	testValue := "testValue"
	shop.SetCreatedByID(testValue)
	if testValue != shop.CreatedByID() {
		t.Fatal("Getter did not return the Set value")
	}
}

func TestShopUpdatedByID(t *testing.T) {
	shop := shop.NewShopEntity()
	testValue := "testValue"
	shop.SetUpdatedByID(&testValue)
	if &testValue != shop.UpdatedByID() {
		t.Fatal("Getter did not return the Set value")
	}
}

func TestShopCreatedAt(t *testing.T) {
	shop := shop.NewShopEntity()
	testValue := time.Now()
	shop.SetCreatedAt(testValue)
	if testValue != shop.CreatedAt() {
		t.Fatal("Getter did not return the Set value")
	}
}

func TestShopUpdatedAt(t *testing.T) {
	shop := shop.NewShopEntity()
	testValue := time.Now()
	shop.SetUpdatedAt(&testValue)
	if &testValue != shop.UpdatedAt() {
		t.Fatal("Getter did not return the Set value")
	}
}

func TestShopCreatedByFirstName(t *testing.T) {
	shop := shop.NewShopEntity()
	testValue := "testValue"
	shop.SetCreatedByFirstName(&testValue)
	if &testValue != shop.CreatedByFirstName() {
		t.Fatal("Getter did not return the Set value")
	}
}

func TestShopCreatedBySurname(t *testing.T) {
	shop := shop.NewShopEntity()
	testValue := "testValue"
	shop.SetCreatedBySurname(&testValue)
	if &testValue != shop.CreatedBySurname() {
		t.Fatal("Getter did not return the Set value")
	}
}

func TestShopUpdatedByFirstName(t *testing.T) {
	shop := shop.NewShopEntity()
	testValue := "testValue"
	shop.SetUpdatedByFirstName(&testValue)
	if &testValue != shop.UpdatedByFirstName() {
		t.Fatal("Getter did not return the Set value")
	}
}

func TestShopUpdatedBySurname(t *testing.T) {
	shop := shop.NewShopEntity()
	testValue := "testValue"
	shop.SetUpdatedBySurname(&testValue)
	if &testValue != shop.UpdatedBySurname() {
		t.Fatal("Getter did not return the Set value")
	}
}

func TestShopLanguage(t *testing.T) {
	shop := shop.NewShopEntity()
	testValue := uint16(65000)
	shop.SetLanguage(&testValue)
	if &testValue != shop.Language() {
		t.Fatal("Getter did not return the Set value")
	}
}

func TestShopCurrencies(t *testing.T) {
	shop := shop.NewShopEntity()
	testValue := "testValue"
	shop.SetCurrencies(testValue)
	if testValue != shop.Currencies() {
		t.Fatal("Getter did not return the Set value")
	}
}
