// Code generated by espal-store-synthesizer. DO NOT EDIT.
package shop_test

import (
	"testing"
	"time"

	"github.com/espal-digital-development/espal-core/stores/shop"
)

func TestShopTable(t *testing.T) {
	s := shop.NewShopEntity()
	if s.TableName() == "" {
		t.Fatal("TableName shouldn't be empty")
	}
}

func TestShopTableAlias(t *testing.T) {
	s := shop.NewShopEntity()
	if s.TableName() == "" {
		t.Fatal("TableAlias shouldn't be empty")
	}
}

func TestShopIsUpdated(t *testing.T) {
	s := shop.NewShopEntity()
	s.IsUpdated()
}

func TestShopID(t *testing.T) {
	s := shop.NewShopEntity()
	s.ID()
}

func TestShopCreatedByID(t *testing.T) {
	s := shop.NewShopEntity()
	testValue := "testValue"
	s.SetCreatedByID(testValue)
	if testValue != s.CreatedByID() {
		t.Fatal("Getter did not return the Set value")
	}
}

func TestShopUpdatedByID(t *testing.T) {
	s := shop.NewShopEntity()
	testValue := "testValue"
	s.SetUpdatedByID(&testValue)
	if &testValue != s.UpdatedByID() {
		t.Fatal("Getter did not return the Set value")
	}
}

func TestShopCreatedAt(t *testing.T) {
	s := shop.NewShopEntity()
	testValue := time.Now()
	s.SetCreatedAt(testValue)
	if testValue != s.CreatedAt() {
		t.Fatal("Getter did not return the Set value")
	}
}

func TestShopUpdatedAt(t *testing.T) {
	s := shop.NewShopEntity()
	testValue := time.Now()
	s.SetUpdatedAt(&testValue)
	if &testValue != s.UpdatedAt() {
		t.Fatal("Getter did not return the Set value")
	}
}

func TestShopCreatedByFirstName(t *testing.T) {
	s := shop.NewShopEntity()
	testValue := "testValue"
	s.SetCreatedByFirstName(&testValue)
	if &testValue != s.CreatedByFirstName() {
		t.Fatal("Getter did not return the Set value")
	}
}

func TestShopCreatedBySurname(t *testing.T) {
	s := shop.NewShopEntity()
	testValue := "testValue"
	s.SetCreatedBySurname(&testValue)
	if &testValue != s.CreatedBySurname() {
		t.Fatal("Getter did not return the Set value")
	}
}

func TestShopUpdatedByFirstName(t *testing.T) {
	s := shop.NewShopEntity()
	testValue := "testValue"
	s.SetUpdatedByFirstName(&testValue)
	if &testValue != s.UpdatedByFirstName() {
		t.Fatal("Getter did not return the Set value")
	}
}

func TestShopUpdatedBySurname(t *testing.T) {
	s := shop.NewShopEntity()
	testValue := "testValue"
	s.SetUpdatedBySurname(&testValue)
	if &testValue != s.UpdatedBySurname() {
		t.Fatal("Getter did not return the Set value")
	}
}

func TestShopLanguage(t *testing.T) {
	s := shop.NewShopEntity()
	testValue := uint16(65000)
	s.SetLanguage(&testValue)
	if &testValue != s.Language() {
		t.Fatal("Getter did not return the Set value")
	}
}

func TestShopCurrencies(t *testing.T) {
	s := shop.NewShopEntity()
	testValue := "testValue"
	s.SetCurrencies(testValue)
	if testValue != s.Currencies() {
		t.Fatal("Getter did not return the Set value")
	}
}
