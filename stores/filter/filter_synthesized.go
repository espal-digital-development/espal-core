// Code generated by espal-store-synthesizer. DO NOT EDIT.
package filter

import (
	"time"

	"github.com/espal-digital-development/espal-core/database"
)

var _ FilterEntity = &Filter{}

type FilterEntity interface {
	database.Model
}

// TableName returns the table name that belongs to the current model.
func (filter *Filter) TableName() string {
	return "Filter"
}

// TableAlias returns the unique resolved table alias for use in queries.
func (filter *Filter) TableAlias() string {
	return "fe"
}

// ID returns id.
func (filter *Filter) ID() string {
	return filter.id
}

// CreatedByID returns createdByID.
func (filter *Filter) CreatedByID() string {
	return filter.createdByID
}

// SetCreatedByID sets the createdByID.
func (filter *Filter) SetCreatedByID(createdByID string) {
	filter.createdByID = createdByID
}

// UpdatedByID returns updatedByID.
func (filter *Filter) UpdatedByID() *string {
	return filter.updatedByID
}

// SetUpdatedByID sets the updatedByID.
func (filter *Filter) SetUpdatedByID(updatedByID *string) {
	filter.updatedByID = updatedByID
}

// CreatedAt returns createdAt.
func (filter *Filter) CreatedAt() time.Time {
	return filter.createdAt
}

// SetCreatedAt sets the createdAt.
func (filter *Filter) SetCreatedAt(createdAt time.Time) {
	filter.createdAt = createdAt
}

// UpdatedAt returns updatedAt.
func (filter *Filter) UpdatedAt() *time.Time {
	return filter.updatedAt
}

// SetUpdatedAt sets the updatedAt.
func (filter *Filter) SetUpdatedAt(updatedAt *time.Time) {
	filter.updatedAt = updatedAt
}

// CreatedByFirstName returns createdByFirstName.
func (filter *Filter) CreatedByFirstName() *string {
	return filter.createdByFirstName
}

// SetCreatedByFirstName sets the createdByFirstName.
func (filter *Filter) SetCreatedByFirstName(createdByFirstName *string) {
	filter.createdByFirstName = createdByFirstName
}

// CreatedBySurname returns createdBySurname.
func (filter *Filter) CreatedBySurname() *string {
	return filter.createdBySurname
}

// SetCreatedBySurname sets the createdBySurname.
func (filter *Filter) SetCreatedBySurname(createdBySurname *string) {
	filter.createdBySurname = createdBySurname
}

// UpdatedByFirstName returns updatedByFirstName.
func (filter *Filter) UpdatedByFirstName() *string {
	return filter.updatedByFirstName
}

// SetUpdatedByFirstName sets the updatedByFirstName.
func (filter *Filter) SetUpdatedByFirstName(updatedByFirstName *string) {
	filter.updatedByFirstName = updatedByFirstName
}

// UpdatedBySurname returns updatedBySurname.
func (filter *Filter) UpdatedBySurname() *string {
	return filter.updatedBySurname
}

// SetUpdatedBySurname sets the updatedBySurname.
func (filter *Filter) SetUpdatedBySurname(updatedBySurname *string) {
	filter.updatedBySurname = updatedBySurname
}

// IsUpdated returns true if UpdatedByID is set.
func (filter *Filter) IsUpdated() bool {
	return filter.updatedByID != nil
}

func newFilter() *Filter {
	return &Filter{}
}

// New returns a new instance of FilterEntity.
func NewFilterEntity() FilterEntity {
	return newFilter()
}
