// Code generated by espal-store-synthesizer. DO NOT EDIT.
package setting

import (
	"time"

	"github.com/espal-digital-development/espal-core/database"
)

var _ SettingEntity = &Setting{}

type SettingEntity interface {
	database.Model
	DomainID() *string
	SetDomainID(domainID *string)
	SiteID() *string
	SetSiteID(siteID *string)
	UserID() *string
	SetUserID(userID *string)
	Key() uint16
	SetKey(key uint16)
	Value() string
	SetValue(value string)
}

// TableName returns the table name that belongs to the current model.
func (setting *Setting) TableName() string {
	return "Setting"
}

// ID returns id.
func (setting *Setting) ID() string {
	return setting.id
}

// CreatedByID returns createdByID.
func (setting *Setting) CreatedByID() string {
	return setting.createdByID
}

// SetCreatedByID sets the createdByID.
func (setting *Setting) SetCreatedByID(createdByID string) {
	setting.createdByID = createdByID
}

// UpdatedByID returns updatedByID.
func (setting *Setting) UpdatedByID() *string {
	return setting.updatedByID
}

// SetUpdatedByID sets the updatedByID.
func (setting *Setting) SetUpdatedByID(updatedByID *string) {
	setting.updatedByID = updatedByID
}

// CreatedAt returns createdAt.
func (setting *Setting) CreatedAt() time.Time {
	return setting.createdAt
}

// SetCreatedAt sets the createdAt.
func (setting *Setting) SetCreatedAt(createdAt time.Time) {
	setting.createdAt = createdAt
}

// UpdatedAt returns updatedAt.
func (setting *Setting) UpdatedAt() *time.Time {
	return setting.updatedAt
}

// SetUpdatedAt sets the updatedAt.
func (setting *Setting) SetUpdatedAt(updatedAt *time.Time) {
	setting.updatedAt = updatedAt
}

// CreatedByFirstName returns createdByFirstName.
func (setting *Setting) CreatedByFirstName() *string {
	return setting.createdByFirstName
}

// SetCreatedByFirstName sets the createdByFirstName.
func (setting *Setting) SetCreatedByFirstName(createdByFirstName *string) {
	setting.createdByFirstName = createdByFirstName
}

// CreatedBySurname returns createdBySurname.
func (setting *Setting) CreatedBySurname() *string {
	return setting.createdBySurname
}

// SetCreatedBySurname sets the createdBySurname.
func (setting *Setting) SetCreatedBySurname(createdBySurname *string) {
	setting.createdBySurname = createdBySurname
}

// UpdatedByFirstName returns updatedByFirstName.
func (setting *Setting) UpdatedByFirstName() *string {
	return setting.updatedByFirstName
}

// SetUpdatedByFirstName sets the updatedByFirstName.
func (setting *Setting) SetUpdatedByFirstName(updatedByFirstName *string) {
	setting.updatedByFirstName = updatedByFirstName
}

// UpdatedBySurname returns updatedBySurname.
func (setting *Setting) UpdatedBySurname() *string {
	return setting.updatedBySurname
}

// SetUpdatedBySurname sets the updatedBySurname.
func (setting *Setting) SetUpdatedBySurname(updatedBySurname *string) {
	setting.updatedBySurname = updatedBySurname
}

// IsUpdated returns true if UpdatedByID is set.
func (setting *Setting) IsUpdated() bool {
	return setting.updatedByID != nil
}

// DomainID returns domainID.
func (setting *Setting) DomainID() *string {
	return setting.domainID
}

// SetDomainID sets the domainID.
func (setting *Setting) SetDomainID(domainID *string) {
	setting.domainID = domainID
}

// SiteID returns siteID.
func (setting *Setting) SiteID() *string {
	return setting.siteID
}

// SetSiteID sets the siteID.
func (setting *Setting) SetSiteID(siteID *string) {
	setting.siteID = siteID
}

// UserID returns userID.
func (setting *Setting) UserID() *string {
	return setting.userID
}

// SetUserID sets the userID.
func (setting *Setting) SetUserID(userID *string) {
	setting.userID = userID
}

// Key returns key.
func (setting *Setting) Key() uint16 {
	return setting.key
}

// SetKey sets the key.
func (setting *Setting) SetKey(key uint16) {
	setting.key = key
}

// Value returns value.
func (setting *Setting) Value() string {
	return setting.value
}

// SetValue sets the value.
func (setting *Setting) SetValue(value string) {
	setting.value = value
}

func newSetting() *Setting {
	return &Setting{}
}

// New returns a new instance of SettingEntity.
func NewSettingEntity() SettingEntity {
	return newSetting()
}
