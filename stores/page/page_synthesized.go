// Code generated by espal-store-synthesizer. DO NOT EDIT.
package page

import (
	"time"

	"github.com/espal-digital-development/espal-core/database"
)

var _ PageEntity = &Page{}

type PageEntity interface {
	database.Model
	DomainID() string
	SetDomainID(domainID string)
	Active() bool
	SetActive(active bool)
}

// TableName returns the table name that belongs to the current model.
func (page *Page) TableName() string {
	return "Page"
}

// ID returns id.
func (page *Page) ID() string {
	return page.id
}

// CreatedByID returns createdByID.
func (page *Page) CreatedByID() string {
	return page.createdByID
}

// SetCreatedByID sets the createdByID.
func (page *Page) SetCreatedByID(createdByID string) {
	page.createdByID = createdByID
}

// UpdatedByID returns updatedByID.
func (page *Page) UpdatedByID() *string {
	return page.updatedByID
}

// SetUpdatedByID sets the updatedByID.
func (page *Page) SetUpdatedByID(updatedByID *string) {
	page.updatedByID = updatedByID
}

// CreatedAt returns createdAt.
func (page *Page) CreatedAt() time.Time {
	return page.createdAt
}

// SetCreatedAt sets the createdAt.
func (page *Page) SetCreatedAt(createdAt time.Time) {
	page.createdAt = createdAt
}

// UpdatedAt returns updatedAt.
func (page *Page) UpdatedAt() *time.Time {
	return page.updatedAt
}

// SetUpdatedAt sets the updatedAt.
func (page *Page) SetUpdatedAt(updatedAt *time.Time) {
	page.updatedAt = updatedAt
}

// CreatedByFirstName returns createdByFirstName.
func (page *Page) CreatedByFirstName() *string {
	return page.createdByFirstName
}

// SetCreatedByFirstName sets the createdByFirstName.
func (page *Page) SetCreatedByFirstName(createdByFirstName *string) {
	page.createdByFirstName = createdByFirstName
}

// CreatedBySurname returns createdBySurname.
func (page *Page) CreatedBySurname() *string {
	return page.createdBySurname
}

// SetCreatedBySurname sets the createdBySurname.
func (page *Page) SetCreatedBySurname(createdBySurname *string) {
	page.createdBySurname = createdBySurname
}

// UpdatedByFirstName returns updatedByFirstName.
func (page *Page) UpdatedByFirstName() *string {
	return page.updatedByFirstName
}

// SetUpdatedByFirstName sets the updatedByFirstName.
func (page *Page) SetUpdatedByFirstName(updatedByFirstName *string) {
	page.updatedByFirstName = updatedByFirstName
}

// UpdatedBySurname returns updatedBySurname.
func (page *Page) UpdatedBySurname() *string {
	return page.updatedBySurname
}

// SetUpdatedBySurname sets the updatedBySurname.
func (page *Page) SetUpdatedBySurname(updatedBySurname *string) {
	page.updatedBySurname = updatedBySurname
}

// IsUpdated returns true if UpdatedByID is set.
func (page *Page) IsUpdated() bool {
	return page.updatedByID != nil
}

// DomainID returns domainID.
func (page *Page) DomainID() string {
	return page.domainID
}

// SetDomainID sets the domainID.
func (page *Page) SetDomainID(domainID string) {
	page.domainID = domainID
}

// Active returns active.
func (page *Page) Active() bool {
	return page.active
}

// SetActive sets the active.
func (page *Page) SetActive(active bool) {
	page.active = active
}

func newPage() *Page {
	return &Page{}
}

// New returns a new instance of PageEntity.
func NewPageEntity() PageEntity {
	return newPage()
}
