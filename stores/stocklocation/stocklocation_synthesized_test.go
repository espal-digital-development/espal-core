// Code generated by espal-store-synthesizer. DO NOT EDIT.
package stocklocation_test

import (
	"testing"
	"time"

	"github.com/espal-digital-development/espal-core/stores/stocklocation"
)

func TestStockLocationTable(t *testing.T) {
	s := stocklocation.NewStockLocationEntity()
	if s.TableName() == "" {
		t.Fatal("TableName shouldn't be empty")
	}
}

func TestStockLocationTableAlias(t *testing.T) {
	s := stocklocation.NewStockLocationEntity()
	if s.TableName() == "" {
		t.Fatal("TableAlias shouldn't be empty")
	}
}

func TestStockLocationIsUpdated(t *testing.T) {
	s := stocklocation.NewStockLocationEntity()
	s.IsUpdated()
}

func TestStockLocationID(t *testing.T) {
	s := stocklocation.NewStockLocationEntity()
	s.ID()
}

func TestStockLocationCreatedByID(t *testing.T) {
	s := stocklocation.NewStockLocationEntity()
	testValue := "testValue"
	s.SetCreatedByID(testValue)
	if testValue != s.CreatedByID() {
		t.Fatal("Getter did not return the Set value")
	}
}

func TestStockLocationUpdatedByID(t *testing.T) {
	s := stocklocation.NewStockLocationEntity()
	testValue := "testValue"
	s.SetUpdatedByID(&testValue)
	if &testValue != s.UpdatedByID() {
		t.Fatal("Getter did not return the Set value")
	}
}

func TestStockLocationCreatedAt(t *testing.T) {
	s := stocklocation.NewStockLocationEntity()
	testValue := time.Now()
	s.SetCreatedAt(testValue)
	if testValue != s.CreatedAt() {
		t.Fatal("Getter did not return the Set value")
	}
}

func TestStockLocationUpdatedAt(t *testing.T) {
	s := stocklocation.NewStockLocationEntity()
	testValue := time.Now()
	s.SetUpdatedAt(&testValue)
	if &testValue != s.UpdatedAt() {
		t.Fatal("Getter did not return the Set value")
	}
}

func TestStockLocationCreatedByFirstName(t *testing.T) {
	s := stocklocation.NewStockLocationEntity()
	testValue := "testValue"
	s.SetCreatedByFirstName(&testValue)
	if &testValue != s.CreatedByFirstName() {
		t.Fatal("Getter did not return the Set value")
	}
}

func TestStockLocationCreatedBySurname(t *testing.T) {
	s := stocklocation.NewStockLocationEntity()
	testValue := "testValue"
	s.SetCreatedBySurname(&testValue)
	if &testValue != s.CreatedBySurname() {
		t.Fatal("Getter did not return the Set value")
	}
}

func TestStockLocationUpdatedByFirstName(t *testing.T) {
	s := stocklocation.NewStockLocationEntity()
	testValue := "testValue"
	s.SetUpdatedByFirstName(&testValue)
	if &testValue != s.UpdatedByFirstName() {
		t.Fatal("Getter did not return the Set value")
	}
}

func TestStockLocationUpdatedBySurname(t *testing.T) {
	s := stocklocation.NewStockLocationEntity()
	testValue := "testValue"
	s.SetUpdatedBySurname(&testValue)
	if &testValue != s.UpdatedBySurname() {
		t.Fatal("Getter did not return the Set value")
	}
}
