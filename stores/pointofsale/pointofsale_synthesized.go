// Code generated by espal-store-synthesizer. DO NOT EDIT.
package pointofsale

import (
	"time"

	"github.com/espal-digital-development/espal-core/database"
)

var _ PointOfSaleEntity = &PointOfSale{}

type PointOfSaleEntity interface {
	database.Model
	ShopID() string
	SetShopID(shopID string)
}

// TableName returns the table name that belongs to the current model.
func (p *PointOfSale) TableName() string {
	return "PointOfSale"
}

// TableAlias returns the unique resolved table alias for use in queries.
func (p *PointOfSale) TableAlias() string {
	return "pose"
}

// ID returns id.
func (p *PointOfSale) ID() string {
	return p.id
}

// CreatedByID returns createdByID.
func (p *PointOfSale) CreatedByID() string {
	return p.createdByID
}

// SetCreatedByID sets the createdByID.
func (p *PointOfSale) SetCreatedByID(createdByID string) {
	p.createdByID = createdByID
}

// UpdatedByID returns updatedByID.
func (p *PointOfSale) UpdatedByID() *string {
	return p.updatedByID
}

// SetUpdatedByID sets the updatedByID.
func (p *PointOfSale) SetUpdatedByID(updatedByID *string) {
	p.updatedByID = updatedByID
}

// CreatedAt returns createdAt.
func (p *PointOfSale) CreatedAt() time.Time {
	return p.createdAt
}

// SetCreatedAt sets the createdAt.
func (p *PointOfSale) SetCreatedAt(createdAt time.Time) {
	p.createdAt = createdAt
}

// UpdatedAt returns updatedAt.
func (p *PointOfSale) UpdatedAt() *time.Time {
	return p.updatedAt
}

// SetUpdatedAt sets the updatedAt.
func (p *PointOfSale) SetUpdatedAt(updatedAt *time.Time) {
	p.updatedAt = updatedAt
}

// CreatedByFirstName returns createdByFirstName.
func (p *PointOfSale) CreatedByFirstName() *string {
	return p.createdByFirstName
}

// SetCreatedByFirstName sets the createdByFirstName.
func (p *PointOfSale) SetCreatedByFirstName(createdByFirstName *string) {
	p.createdByFirstName = createdByFirstName
}

// CreatedBySurname returns createdBySurname.
func (p *PointOfSale) CreatedBySurname() *string {
	return p.createdBySurname
}

// SetCreatedBySurname sets the createdBySurname.
func (p *PointOfSale) SetCreatedBySurname(createdBySurname *string) {
	p.createdBySurname = createdBySurname
}

// UpdatedByFirstName returns updatedByFirstName.
func (p *PointOfSale) UpdatedByFirstName() *string {
	return p.updatedByFirstName
}

// SetUpdatedByFirstName sets the updatedByFirstName.
func (p *PointOfSale) SetUpdatedByFirstName(updatedByFirstName *string) {
	p.updatedByFirstName = updatedByFirstName
}

// UpdatedBySurname returns updatedBySurname.
func (p *PointOfSale) UpdatedBySurname() *string {
	return p.updatedBySurname
}

// SetUpdatedBySurname sets the updatedBySurname.
func (p *PointOfSale) SetUpdatedBySurname(updatedBySurname *string) {
	p.updatedBySurname = updatedBySurname
}

// IsUpdated returns true if UpdatedByID is set.
func (p *PointOfSale) IsUpdated() bool {
	return p.updatedByID != nil
}

// ShopID returns shopID.
func (p *PointOfSale) ShopID() string {
	return p.shopID
}

// SetShopID sets the shopID.
func (p *PointOfSale) SetShopID(shopID string) {
	p.shopID = shopID
}

func newPointOfSale() *PointOfSale {
	return &PointOfSale{}
}

// New returns a new instance of PointOfSaleEntity.
func NewPointOfSaleEntity() PointOfSaleEntity {
	return newPointOfSale()
}
