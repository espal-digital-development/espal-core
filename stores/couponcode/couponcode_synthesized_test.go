// Code generated by espal-store-synthesizer. DO NOT EDIT.
package couponcode_test

import (
	"testing"
	"time"

	"github.com/espal-digital-development/espal-core/stores/couponcode"
)

func TestCouponCodeTable(t *testing.T) {
	c := couponcode.NewCouponCodeEntity()
	if c.TableName() == "" {
		t.Fatal("TableName shouldn't be empty")
	}
}

func TestCouponCodeTableAlias(t *testing.T) {
	c := couponcode.NewCouponCodeEntity()
	if c.TableName() == "" {
		t.Fatal("TableAlias shouldn't be empty")
	}
}

func TestCouponCodeIsUpdated(t *testing.T) {
	c := couponcode.NewCouponCodeEntity()
	c.IsUpdated()
}

func TestCouponCodeID(t *testing.T) {
	c := couponcode.NewCouponCodeEntity()
	c.ID()
}

func TestCouponCodeCreatedByID(t *testing.T) {
	c := couponcode.NewCouponCodeEntity()
	testValue := "testValue"
	c.SetCreatedByID(testValue)
	if testValue != c.CreatedByID() {
		t.Fatal("Getter did not return the Set value")
	}
}

func TestCouponCodeUpdatedByID(t *testing.T) {
	c := couponcode.NewCouponCodeEntity()
	testValue := "testValue"
	c.SetUpdatedByID(&testValue)
	if &testValue != c.UpdatedByID() {
		t.Fatal("Getter did not return the Set value")
	}
}

func TestCouponCodeCreatedAt(t *testing.T) {
	c := couponcode.NewCouponCodeEntity()
	testValue := time.Now()
	c.SetCreatedAt(testValue)
	if testValue != c.CreatedAt() {
		t.Fatal("Getter did not return the Set value")
	}
}

func TestCouponCodeUpdatedAt(t *testing.T) {
	c := couponcode.NewCouponCodeEntity()
	testValue := time.Now()
	c.SetUpdatedAt(&testValue)
	if &testValue != c.UpdatedAt() {
		t.Fatal("Getter did not return the Set value")
	}
}

func TestCouponCodeCreatedByFirstName(t *testing.T) {
	c := couponcode.NewCouponCodeEntity()
	testValue := "testValue"
	c.SetCreatedByFirstName(&testValue)
	if &testValue != c.CreatedByFirstName() {
		t.Fatal("Getter did not return the Set value")
	}
}

func TestCouponCodeCreatedBySurname(t *testing.T) {
	c := couponcode.NewCouponCodeEntity()
	testValue := "testValue"
	c.SetCreatedBySurname(&testValue)
	if &testValue != c.CreatedBySurname() {
		t.Fatal("Getter did not return the Set value")
	}
}

func TestCouponCodeUpdatedByFirstName(t *testing.T) {
	c := couponcode.NewCouponCodeEntity()
	testValue := "testValue"
	c.SetUpdatedByFirstName(&testValue)
	if &testValue != c.UpdatedByFirstName() {
		t.Fatal("Getter did not return the Set value")
	}
}

func TestCouponCodeUpdatedBySurname(t *testing.T) {
	c := couponcode.NewCouponCodeEntity()
	testValue := "testValue"
	c.SetUpdatedBySurname(&testValue)
	if &testValue != c.UpdatedBySurname() {
		t.Fatal("Getter did not return the Set value")
	}
}

func TestCouponCodeClaimedByID(t *testing.T) {
	c := couponcode.NewCouponCodeEntity()
	testValue := "testValue"
	c.SetClaimedByID(&testValue)
	if &testValue != c.ClaimedByID() {
		t.Fatal("Getter did not return the Set value")
	}
}

func TestCouponCodeKey(t *testing.T) {
	c := couponcode.NewCouponCodeEntity()
	testValue := "testValue"
	c.SetKey(testValue)
	if testValue != c.Key() {
		t.Fatal("Getter did not return the Set value")
	}
}
