// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package contextsmock

import (
	"github.com/espal-digital-development/espal-core/routing/router/contexts"
	"net/http"
	"sync"
)

var (
	lockContextsMockNewContext sync.RWMutex
)

// ContextsMock is a mock implementation of Contexts.
//
//     func TestSomethingThatUsesContexts(t *testing.T) {
//
//         // make and configure a mocked Contexts
//         mockedContexts := &ContextsMock{
//             NewContextFunc: func(request *http.Request, responseWriter http.ResponseWriter, domain contexts.Domain, site contexts.Site) contexts.Context {
// 	               panic("mock out the NewContext method")
//             },
//         }
//
//         // use mockedContexts in code that requires Contexts
//         // and then make assertions.
//
//     }
type ContextsMock struct {
	// NewContextFunc mocks the NewContext method.
	NewContextFunc func(request *http.Request, responseWriter http.ResponseWriter, domain contexts.Domain, site contexts.Site) contexts.Context

	// calls tracks calls to the methods.
	calls struct {
		// NewContext holds details about calls to the NewContext method.
		NewContext []struct {
			// Request is the request argument value.
			Request *http.Request
			// ResponseWriter is the responseWriter argument value.
			ResponseWriter http.ResponseWriter
			// Domain is the domain argument value.
			Domain contexts.Domain
			// Site is the site argument value.
			Site contexts.Site
		}
	}
}

// NewContext calls NewContextFunc.
func (mock *ContextsMock) NewContext(request *http.Request, responseWriter http.ResponseWriter, domain contexts.Domain, site contexts.Site) contexts.Context {
	if mock.NewContextFunc == nil {
		panic("ContextsMock.NewContextFunc: method is nil but Contexts.NewContext was just called")
	}
	callInfo := struct {
		Request        *http.Request
		ResponseWriter http.ResponseWriter
		Domain         contexts.Domain
		Site           contexts.Site
	}{
		Request:        request,
		ResponseWriter: responseWriter,
		Domain:         domain,
		Site:           site,
	}
	lockContextsMockNewContext.Lock()
	mock.calls.NewContext = append(mock.calls.NewContext, callInfo)
	lockContextsMockNewContext.Unlock()
	return mock.NewContextFunc(request, responseWriter, domain, site)
}

// NewContextCalls gets all the calls that were made to NewContext.
// Check the length with:
//     len(mockedContexts.NewContextCalls())
func (mock *ContextsMock) NewContextCalls() []struct {
	Request        *http.Request
	ResponseWriter http.ResponseWriter
	Domain         contexts.Domain
	Site           contexts.Site
} {
	var calls []struct {
		Request        *http.Request
		ResponseWriter http.ResponseWriter
		Domain         contexts.Domain
		Site           contexts.Site
	}
	lockContextsMockNewContext.RLock()
	calls = mock.calls.NewContext
	lockContextsMockNewContext.RUnlock()
	return calls
}
