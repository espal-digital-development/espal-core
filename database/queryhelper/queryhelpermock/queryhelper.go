// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package queryhelpermock

import (
	"github.com/espal-digital-development/espal-core/database/queryhelper"
	"sync"
)

var (
	lockHelperMockBuildDeleteWhereInIds sync.RWMutex
)

// Ensure, that HelperMock does implement queryhelper.Helper.
// If this is not the case, regenerate this file with moq.
var _ queryhelper.Helper = &HelperMock{}

// HelperMock is a mock implementation of queryhelper.Helper.
//
//     func TestSomethingThatUsesHelper(t *testing.T) {
//
//         // make and configure a mocked queryhelper.Helper
//         mockedHelper := &HelperMock{
//             BuildDeleteWhereInIdsFunc: func(tableName string, fieldName string, values []string) (string, []interface{}, error) {
// 	               panic("mock out the BuildDeleteWhereInIds method")
//             },
//         }
//
//         // use mockedHelper in code that requires queryhelper.Helper
//         // and then make assertions.
//
//     }
type HelperMock struct {
	// BuildDeleteWhereInIdsFunc mocks the BuildDeleteWhereInIds method.
	BuildDeleteWhereInIdsFunc func(tableName string, fieldName string, values []string) (string, []interface{}, error)

	// calls tracks calls to the methods.
	calls struct {
		// BuildDeleteWhereInIds holds details about calls to the BuildDeleteWhereInIds method.
		BuildDeleteWhereInIds []struct {
			// TableName is the tableName argument value.
			TableName string
			// FieldName is the fieldName argument value.
			FieldName string
			// Values is the values argument value.
			Values []string
		}
	}
}

// BuildDeleteWhereInIds calls BuildDeleteWhereInIdsFunc.
func (mock *HelperMock) BuildDeleteWhereInIds(tableName string, fieldName string, values []string) (string, []interface{}, error) {
	if mock.BuildDeleteWhereInIdsFunc == nil {
		panic("HelperMock.BuildDeleteWhereInIdsFunc: method is nil but Helper.BuildDeleteWhereInIds was just called")
	}
	callInfo := struct {
		TableName string
		FieldName string
		Values    []string
	}{
		TableName: tableName,
		FieldName: fieldName,
		Values:    values,
	}
	lockHelperMockBuildDeleteWhereInIds.Lock()
	mock.calls.BuildDeleteWhereInIds = append(mock.calls.BuildDeleteWhereInIds, callInfo)
	lockHelperMockBuildDeleteWhereInIds.Unlock()
	return mock.BuildDeleteWhereInIdsFunc(tableName, fieldName, values)
}

// BuildDeleteWhereInIdsCalls gets all the calls that were made to BuildDeleteWhereInIds.
// Check the length with:
//     len(mockedHelper.BuildDeleteWhereInIdsCalls())
func (mock *HelperMock) BuildDeleteWhereInIdsCalls() []struct {
	TableName string
	FieldName string
	Values    []string
} {
	var calls []struct {
		TableName string
		FieldName string
		Values    []string
	}
	lockHelperMockBuildDeleteWhereInIds.RLock()
	calls = mock.calls.BuildDeleteWhereInIds
	lockHelperMockBuildDeleteWhereInIds.RUnlock()
	return calls
}
