// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package filtersmock

import (
	"github.com/espal-digital-development/espal-core/database/filters"
	"sync"
)

var (
	lockSearchFieldMockName          sync.RWMutex
	lockSearchFieldMockSetTableAlias sync.RWMutex
	lockSearchFieldMockTableAlias    sync.RWMutex
)

// Ensure, that SearchFieldMock does implement filters.SearchField.
// If this is not the case, regenerate this file with moq.
var _ filters.SearchField = &SearchFieldMock{}

// SearchFieldMock is a mock implementation of filters.SearchField.
//
//     func TestSomethingThatUsesSearchField(t *testing.T) {
//
//         // make and configure a mocked filters.SearchField
//         mockedSearchField := &SearchFieldMock{
//             NameFunc: func() string {
// 	               panic("mock out the Name method")
//             },
//             SetTableAliasFunc: func(tableAlias string) filters.SearchField {
// 	               panic("mock out the SetTableAlias method")
//             },
//             TableAliasFunc: func() string {
// 	               panic("mock out the TableAlias method")
//             },
//         }
//
//         // use mockedSearchField in code that requires filters.SearchField
//         // and then make assertions.
//
//     }
type SearchFieldMock struct {
	// NameFunc mocks the Name method.
	NameFunc func() string

	// SetTableAliasFunc mocks the SetTableAlias method.
	SetTableAliasFunc func(tableAlias string) filters.SearchField

	// TableAliasFunc mocks the TableAlias method.
	TableAliasFunc func() string

	// calls tracks calls to the methods.
	calls struct {
		// Name holds details about calls to the Name method.
		Name []struct {
		}
		// SetTableAlias holds details about calls to the SetTableAlias method.
		SetTableAlias []struct {
			// TableAlias is the tableAlias argument value.
			TableAlias string
		}
		// TableAlias holds details about calls to the TableAlias method.
		TableAlias []struct {
		}
	}
}

// Name calls NameFunc.
func (mock *SearchFieldMock) Name() string {
	if mock.NameFunc == nil {
		panic("SearchFieldMock.NameFunc: method is nil but SearchField.Name was just called")
	}
	callInfo := struct {
	}{}
	lockSearchFieldMockName.Lock()
	mock.calls.Name = append(mock.calls.Name, callInfo)
	lockSearchFieldMockName.Unlock()
	return mock.NameFunc()
}

// NameCalls gets all the calls that were made to Name.
// Check the length with:
//     len(mockedSearchField.NameCalls())
func (mock *SearchFieldMock) NameCalls() []struct {
} {
	var calls []struct {
	}
	lockSearchFieldMockName.RLock()
	calls = mock.calls.Name
	lockSearchFieldMockName.RUnlock()
	return calls
}

// SetTableAlias calls SetTableAliasFunc.
func (mock *SearchFieldMock) SetTableAlias(tableAlias string) filters.SearchField {
	if mock.SetTableAliasFunc == nil {
		panic("SearchFieldMock.SetTableAliasFunc: method is nil but SearchField.SetTableAlias was just called")
	}
	callInfo := struct {
		TableAlias string
	}{
		TableAlias: tableAlias,
	}
	lockSearchFieldMockSetTableAlias.Lock()
	mock.calls.SetTableAlias = append(mock.calls.SetTableAlias, callInfo)
	lockSearchFieldMockSetTableAlias.Unlock()
	return mock.SetTableAliasFunc(tableAlias)
}

// SetTableAliasCalls gets all the calls that were made to SetTableAlias.
// Check the length with:
//     len(mockedSearchField.SetTableAliasCalls())
func (mock *SearchFieldMock) SetTableAliasCalls() []struct {
	TableAlias string
} {
	var calls []struct {
		TableAlias string
	}
	lockSearchFieldMockSetTableAlias.RLock()
	calls = mock.calls.SetTableAlias
	lockSearchFieldMockSetTableAlias.RUnlock()
	return calls
}

// TableAlias calls TableAliasFunc.
func (mock *SearchFieldMock) TableAlias() string {
	if mock.TableAliasFunc == nil {
		panic("SearchFieldMock.TableAliasFunc: method is nil but SearchField.TableAlias was just called")
	}
	callInfo := struct {
	}{}
	lockSearchFieldMockTableAlias.Lock()
	mock.calls.TableAlias = append(mock.calls.TableAlias, callInfo)
	lockSearchFieldMockTableAlias.Unlock()
	return mock.TableAliasFunc()
}

// TableAliasCalls gets all the calls that were made to TableAlias.
// Check the length with:
//     len(mockedSearchField.TableAliasCalls())
func (mock *SearchFieldMock) TableAliasCalls() []struct {
} {
	var calls []struct {
	}
	lockSearchFieldMockTableAlias.RLock()
	calls = mock.calls.TableAlias
	lockSearchFieldMockTableAlias.RUnlock()
	return calls
}
