// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package filtersmock

import (
	"github.com/espal-digital-development/espal-core/database/filters"
	"sync"
)

var (
	lockFactoryMockNewFilter sync.RWMutex
)

// FactoryMock is a mock implementation of Factory.
//
//     func TestSomethingThatUsesFactory(t *testing.T) {
//
//         // make and configure a mocked Factory
//         mockedFactory := &FactoryMock{
//             NewFilterFunc: func(queryReader filters.QueryReader, m filters.Model) filters.Filter {
// 	               panic("mock out the NewFilter method")
//             },
//         }
//
//         // use mockedFactory in code that requires Factory
//         // and then make assertions.
//
//     }
type FactoryMock struct {
	// NewFilterFunc mocks the NewFilter method.
	NewFilterFunc func(queryReader filters.QueryReader, m filters.Model) filters.Filter

	// calls tracks calls to the methods.
	calls struct {
		// NewFilter holds details about calls to the NewFilter method.
		NewFilter []struct {
			// QueryReader is the queryReader argument value.
			QueryReader filters.QueryReader
			// M is the m argument value.
			M filters.Model
		}
	}
}

// NewFilter calls NewFilterFunc.
func (mock *FactoryMock) NewFilter(queryReader filters.QueryReader, m filters.Model) filters.Filter {
	if mock.NewFilterFunc == nil {
		panic("FactoryMock.NewFilterFunc: method is nil but Factory.NewFilter was just called")
	}
	callInfo := struct {
		QueryReader filters.QueryReader
		M           filters.Model
	}{
		QueryReader: queryReader,
		M:           m,
	}
	lockFactoryMockNewFilter.Lock()
	mock.calls.NewFilter = append(mock.calls.NewFilter, callInfo)
	lockFactoryMockNewFilter.Unlock()
	return mock.NewFilterFunc(queryReader, m)
}

// NewFilterCalls gets all the calls that were made to NewFilter.
// Check the length with:
//     len(mockedFactory.NewFilterCalls())
func (mock *FactoryMock) NewFilterCalls() []struct {
	QueryReader filters.QueryReader
	M           filters.Model
} {
	var calls []struct {
		QueryReader filters.QueryReader
		M           filters.Model
	}
	lockFactoryMockNewFilter.RLock()
	calls = mock.calls.NewFilter
	lockFactoryMockNewFilter.RUnlock()
	return calls
}
